"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = interpolate;

var _parseFloat2 = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/parse-float"));

var _isArray = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/array/is-array"));

var _forEach = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/for-each"));

/**
 *
 * @param {number|number[]|string|string[]} from
 * @param {number|number[]|string|string[]} to
 * @param {number} ratio
 * @param {Function} [parser]
 * @param {Function} [formatter]
 * @returns {any}
*/
// eslint-disable-next-line max-len
function interpolate(from, to) {
  let ratio = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
  let parser = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
  let formatter = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;

  if (typeof parser === 'function') {
    from = parser(from);
    to = parser(to);
  }

  if (typeof from === 'string' || typeof from === 'number') {
    from = [(0, _parseFloat2.default)(from)];
  }

  if (typeof to === 'string' || typeof to === 'number') {
    to = [(0, _parseFloat2.default)(to)];
  }

  const result = [];

  if ((0, _isArray.default)(from) && (0, _isArray.default)(to)) {
    (0, _forEach.default)(from).call(from, (fromVal, idx) => {
      fromVal = (0, _parseFloat2.default)(fromVal);
      const toVal = (0, _parseFloat2.default)(to[idx]);
      result.push((toVal - fromVal) * ratio + fromVal);
    });
  }

  if (typeof formatter === 'function') {
    return formatter(result);
  } else {
    return result;
  }
}