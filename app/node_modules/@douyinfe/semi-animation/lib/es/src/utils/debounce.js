import _setTimeout from "@babel/runtime-corejs3/core-js-stable/set-timeout";

/**
 *
 * @param {Function} func
 * @param {number} delay
 */
export default function debounce(func) {
  let delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  let timeoutId;
  return function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    // eslint-disable-next-line @typescript-eslint/no-this-alias
    const context = this;
    clearTimeout(timeoutId);
    timeoutId = _setTimeout(() => func.apply(context, args), delay);
  };
}