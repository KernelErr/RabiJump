"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _map = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/map"));

var _concat = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/concat"));

var _keys = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/keys"));

var _assign = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/object/assign"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _foundation = _interopRequireDefault(require("@douyinfe/semi-foundation/lib/cjs/calendar/foundation"));

var _constants = require("@douyinfe/semi-foundation/lib/cjs/calendar/constants");

var _baseComponent = _interopRequireDefault(require("../_base/baseComponent"));

var _context5 = _interopRequireDefault(require("../locale/context"));

require("@douyinfe/semi-foundation/lib/cjs/calendar/calendar.css");

/* eslint-disable max-len */
const prefixCls = "".concat(_constants.cssClasses.PREFIX, "-grid");

function pad(d) {
  return d < 10 ? "0".concat(d.toString()) : d.toString();
}

class DayCol extends _baseComponent.default {
  constructor(props) {
    super(props);

    this.renderEvents = () => {
      const {
        events,
        scrollHeight
      } = this.props;
      const list = (0, _map.default)(events).call(events, (event, ind) => {
        var _context, _context2;

        const {
          startPos,
          endPos,
          children,
          key
        } = event;
        const top = startPos * scrollHeight;
        const height = (endPos - startPos) * scrollHeight;

        if (!height) {
          return undefined;
        }

        const style = {
          top: "".concat(top, "px"),
          height: "".concat(height, "px")
        };
        return /*#__PURE__*/_react.default.createElement("li", {
          className: (0, _concat.default)(_context = "".concat(_constants.cssClasses.PREFIX, "-event-item ")).call(_context, _constants.cssClasses.PREFIX, "-event-day"),
          style: style,
          key: key || (0, _concat.default)(_context2 = "".concat(top, "-")).call(_context2, ind)
        }, children);
      });
      return list;
    };

    this.renderCurrTime = () => {
      const {
        currPos
      } = this.state;
      const {
        scrollHeight
      } = this.props;
      const key = currPos;
      const top = currPos * scrollHeight;
      const style = {
        top
      };

      const circle = /*#__PURE__*/_react.default.createElement("div", {
        className: "".concat(prefixCls, "-curr-circle"),
        style: style
      });

      const line = /*#__PURE__*/_react.default.createElement("div", {
        className: "".concat(prefixCls, "-curr-line"),
        style: style
      });

      return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, {
        key: key
      }, circle, line);
    };

    this.handleClick = (e, val) => {
      this.props.handleClick(e, val);
    };

    this.renderGrid = () => {
      var _context3, _context4;

      const showCurrTime = this.props.showCurrTime ? this.state.showCurrTime : false;
      const {
        displayValue,
        isWeekend,
        dateGridRender
      } = this.props;
      const skCls = (0, _classnames.default)("".concat(prefixCls, "-skeleton"), {
        ["".concat(_constants.cssClasses.PREFIX, "-weekend")]: isWeekend
      });
      return /*#__PURE__*/_react.default.createElement("div", {
        className: "".concat(prefixCls),
        role: "presentation"
      }, /*#__PURE__*/_react.default.createElement("div", {
        role: "gridcell",
        className: "".concat(prefixCls, "-content")
      }, showCurrTime ? this.renderCurrTime() : null, /*#__PURE__*/_react.default.createElement("ul", {
        role: "row",
        className: skCls
      }, (0, _map.default)(_context3 = [...(0, _keys.default)(_context4 = Array(25)).call(_context4)]).call(_context3, item => {
        const line = (0, _classnames.default)({
          ["".concat(prefixCls, "-skeleton-row-line")]: true
        });
        return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, {
          key: "".concat(item, "-daycol")
        }, /*#__PURE__*/_react.default.createElement("li", {
          "data-time": "".concat(pad(item), ":00:00"),
          className: line,
          onClick: e => this.handleClick(e, [displayValue, item, 0, 0])
        }), /*#__PURE__*/_react.default.createElement("li", {
          "data-time": "".concat(pad(item), ":30:00"),
          onClick: e => this.handleClick(e, [displayValue, item, 30, 0])
        }));
      })), dateGridRender && dateGridRender(displayValue.toString(), displayValue), /*#__PURE__*/_react.default.createElement("ul", {
        className: "".concat(_constants.cssClasses.PREFIX, "-event-items")
      }, this.renderEvents())));
    };

    this.state = {
      currPos: 0,
      showCurrTime: false
    };
    this.foundation = new _foundation.default(this.adapter);
  }

  componentDidMount() {
    this.foundation.init();
    this.foundation.initCurrTime();
  }

  componentWillUnmount() {
    this.foundation.destroy();
  }

  get adapter() {
    return (0, _assign.default)((0, _assign.default)({}, super.adapter), {
      updateCurrPos: currPos => {
        this.setState({
          currPos
        });
      },
      updateShowCurrTime: () => {
        this.setState({
          showCurrTime: true
        });
      }
    });
  }

  render() {
    const grid = this.renderGrid();
    return grid;
  }

}

exports.default = DayCol;
DayCol.propTypes = {
  events: _propTypes.default.array,
  displayValue: _propTypes.default.instanceOf(Date),
  showCurrTime: _propTypes.default.bool,
  scrollHeight: _propTypes.default.number,
  currPos: _propTypes.default.number,
  handleClick: _propTypes.default.func,
  mode: _propTypes.default.string,
  isWeekend: _propTypes.default.bool,
  dateGridRender: _propTypes.default.func
};
DayCol.defaultProps = {
  events: [],
  showCurrTime: true,
  scrollHeight: 0,
  currPos: 0,
  mode: 'dayCol'
};
DayCol.contextType = _context5.default;