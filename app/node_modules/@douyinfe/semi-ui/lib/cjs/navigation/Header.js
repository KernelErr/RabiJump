"use strict";

var _WeakMap = require("@babel/runtime-corejs3/core-js-stable/weak-map");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

var _Object$getOwnPropertyDescriptor = require("@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _assign = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/object/assign"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _isNullOrUndefined = _interopRequireDefault(require("@douyinfe/semi-foundation/lib/cjs/utils/isNullOrUndefined"));

var _constants = require("@douyinfe/semi-foundation/lib/cjs/navigation/constants");

require("@douyinfe/semi-foundation/lib/cjs/navigation/navigation.css");

var _navContext = _interopRequireDefault(require("./nav-context"));

function _getRequireWildcardCache(nodeInterop) { if (typeof _WeakMap !== "function") return null; var cacheBabelInterop = new _WeakMap(); var cacheNodeInterop = new _WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = _Object$defineProperty && _Object$getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? _Object$getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { _Object$defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class NavHeader extends _react.PureComponent {
  renderLogo(logo) {
    if ( /*#__PURE__*/_react.default.isValidElement(logo)) {
      return logo;
    }

    return null;
  }

  render() {
    const {
      children,
      style,
      className,
      logo,
      text,
      link,
      linkOptions,
      prefixCls
    } = this.props;
    const {
      isCollapsed
    } = this.context;
    const wrapCls = (0, _classnames.default)(className, "".concat(_constants.cssClasses.PREFIX, "-header"), {
      ["".concat(_constants.cssClasses.PREFIX, "-header-collapsed")]: isCollapsed
    });

    let wrappedChildren = /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, logo ? /*#__PURE__*/_react.default.createElement("i", {
      className: "".concat(_constants.cssClasses.PREFIX, "-header-logo")
    }, this.renderLogo(logo)) : null, !(0, _isNullOrUndefined.default)(text) && !isCollapsed ? /*#__PURE__*/_react.default.createElement("span", {
      className: "".concat(_constants.cssClasses.PREFIX, "-header-text")
    }, text) : null, children);

    if (typeof link === 'string') {
      wrappedChildren = /*#__PURE__*/_react.default.createElement("a", (0, _assign.default)({
        className: "".concat(prefixCls, "-header-link"),
        href: link
      }, linkOptions), wrappedChildren);
    }

    return /*#__PURE__*/_react.default.createElement("div", {
      className: wrapCls,
      style: style
    }, wrappedChildren);
  }

}

exports.default = NavHeader;
NavHeader.contextType = _navContext.default;
NavHeader.propTypes = {
  prefixCls: _propTypes.default.string,
  logo: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object, _propTypes.default.node]),
  text: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.node]),
  children: _propTypes.default.node,
  style: _propTypes.default.object,
  className: _propTypes.default.string,
  link: _propTypes.default.string,
  linkOptions: _propTypes.default.object
};
NavHeader.defaultProps = {
  prefixCls: _constants.cssClasses.PREFIX
};