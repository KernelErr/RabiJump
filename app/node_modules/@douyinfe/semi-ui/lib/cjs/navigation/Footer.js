"use strict";

var _WeakMap = require("@babel/runtime-corejs3/core-js-stable/weak-map");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

var _Object$getOwnPropertyDescriptor = require("@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _assign = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/object/assign"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _constants = require("@douyinfe/semi-foundation/lib/cjs/navigation/constants");

var _CollapseButton = _interopRequireDefault(require("./CollapseButton"));

require("@douyinfe/semi-foundation/lib/cjs/navigation/navigation.css");

var _navContext = _interopRequireDefault(require("./nav-context"));

function _getRequireWildcardCache(nodeInterop) { if (typeof _WeakMap !== "function") return null; var cacheBabelInterop = new _WeakMap(); var cacheNodeInterop = new _WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = _Object$defineProperty && _Object$getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? _Object$getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { _Object$defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class NavFooter extends _react.PureComponent {
  constructor() {
    super(...arguments);

    this.renderCollapseButton = () => {
      const {
        collapseButton,
        collapseText
      } = this.props;

      if ( /*#__PURE__*/_react.default.isValidElement(collapseButton)) {
        return collapseButton;
      }

      const {
        onCollapseChange,
        prefixCls,
        locale,
        isCollapsed
      } = this.context;
      return /*#__PURE__*/_react.default.createElement(_CollapseButton.default, (0, _assign.default)({
        prefixCls: prefixCls,
        isCollapsed: isCollapsed,
        locale: locale,
        onClick: onCollapseChange,
        collapseText: collapseText
      }, collapseButton));
    };
  }

  render() {
    const {
      style,
      className,
      collapseButton
    } = this.props;
    let {
      children
    } = this.props;
    const {
      isCollapsed,
      mode
    } = this.context;

    if (! /*#__PURE__*/_react.default.isValidElement(children) && collapseButton && mode !== _constants.strings.MODE_HORIZONTAL) {
      children = this.renderCollapseButton();
    }

    const wrapCls = (0, _classnames.default)(className, "".concat(_constants.cssClasses.PREFIX, "-footer"), {
      ["".concat(_constants.cssClasses.PREFIX, "-footer-collapsed")]: isCollapsed
    });
    return /*#__PURE__*/_react.default.createElement("div", {
      className: wrapCls,
      style: style
    }, children);
  }

}

exports.default = NavFooter;
NavFooter.contextType = _navContext.default;
NavFooter.propTypes = {
  children: _propTypes.default.node,
  style: _propTypes.default.object,
  className: _propTypes.default.string,
  collapseButton: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.bool]),
  collapseText: _propTypes.default.func
};
NavFooter.defaultProps = {
  collapseButton: false
};