"use strict";

var _WeakMap = require("@babel/runtime-corejs3/core-js-stable/weak-map");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

var _Object$getOwnPropertyDescriptor = require("@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _indexOf = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/index-of"));

var _getOwnPropertySymbols = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols"));

var _isArray = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/array/is-array"));

var _findIndex = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/find-index"));

var _assign = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/object/assign"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _constants = require("@douyinfe/semi-foundation/lib/cjs/tabs/constants");

var _getDataAttr = _interopRequireDefault(require("@douyinfe/semi-foundation/lib/cjs/utils/getDataAttr"));

var _tabsContext = _interopRequireDefault(require("./tabs-context"));

var _TabPaneTransition = _interopRequireDefault(require("./TabPaneTransition"));

function _getRequireWildcardCache(nodeInterop) { if (typeof _WeakMap !== "function") return null; var cacheBabelInterop = new _WeakMap(); var cacheNodeInterop = new _WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = _Object$defineProperty && _Object$getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? _Object$getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { _Object$defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};

  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && (0, _indexOf.default)(e).call(e, p) < 0) t[p] = s[p];

  if (s != null && typeof _getOwnPropertySymbols.default === "function") for (var i = 0, p = (0, _getOwnPropertySymbols.default)(s); i < p.length; i++) {
    if ((0, _indexOf.default)(e).call(e, p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

class TabPane extends _react.PureComponent {
  constructor() {
    super(...arguments);
    this.lastActiveKey = null;
    this.ref = /*#__PURE__*/(0, _react.createRef)(); // get direction from current item key to activeKey

    this.getDirection = (activeKey, itemKey, panes) => {
      if (itemKey !== null && activeKey !== null && (0, _isArray.default)(panes) && panes.length) {
        const activeIndex = (0, _findIndex.default)(panes).call(panes, pane => pane.itemKey === activeKey);
        const itemIndex = (0, _findIndex.default)(panes).call(panes, pane => pane.itemKey === itemKey);
        const lastActiveIndex = (0, _findIndex.default)(panes).call(panes, pane => pane.itemKey === this.lastActiveKey);
        this.lastActiveKey = activeKey;

        if (activeIndex === itemIndex) {
          return lastActiveIndex > activeIndex;
        } else {
          return itemIndex < activeIndex;
        }
      }

      return false;
    };
    /* istanbul ignore next */


    this.hideScroll = () => {
      if (this.ref && this.ref.current) {
        this.ref.current.style.overflow = 'hidden';
        this.isAnimating = true;
      }
    };
    /* istanbul ignore next */


    this.autoScroll = () => {
      if (this.ref && this.ref.current) {
        this.ref.current.style.overflow = '';
        this.isAnimating = false;
      }
    };

    this.shouldRender = () => {
      const {
        itemKey
      } = this.props;
      const {
        activeKey,
        lazyRender
      } = this.context;
      const active = activeKey === itemKey;
      this._active = this._active || active;
      return lazyRender ? this._active : true;
    };
  }

  componentDidMount() {
    this.lastActiveKey = this.context.activeKey;
  }

  render() {
    const {
      tabPaneMotion: motion,
      tabPosition
    } = this.context;

    const _a = this.props,
          {
      className,
      style,
      children,
      itemKey
    } = _a,
          restProps = __rest(_a, ["className", "style", "children", "itemKey"]);

    const active = this.context.activeKey === itemKey;
    const classNames = (0, _classnames.default)(className, {
      [_constants.cssClasses.TABS_PANE_INACTIVE]: !active,
      [_constants.cssClasses.TABS_PANE_ACTIVE]: active,
      [_constants.cssClasses.TABS_PANE]: true
    });
    const shouldRender = this.shouldRender();
    return /*#__PURE__*/_react.default.createElement("div", (0, _assign.default)({
      ref: this.ref,
      role: "tabpanel",
      id: "semiTabPanel".concat(itemKey),
      "aria-labelledby": "semiTab".concat(itemKey),
      className: classNames,
      style: style,
      "aria-hidden": active ? 'false' : 'true',
      tabIndex: 0
    }, (0, _getDataAttr.default)(restProps), {
      "x-semi-prop": "children"
    }), motion ? /*#__PURE__*/_react.default.createElement(_TabPaneTransition.default, {
      direction: this.getDirection(this.context.activeKey, itemKey, this.context.panes),
      motion: motion,
      mode: tabPosition === 'top' ? 'horizontal' : 'vertical',
      state: active ? 'enter' : 'leave'
    }, transitionStyle => /*#__PURE__*/_react.default.createElement("div", {
      className: "".concat(_constants.cssClasses.TABS_PANE_MOTION_OVERLAY),
      style: (0, _assign.default)({}, transitionStyle),
      "x-semi-prop": "children"
    }, shouldRender ? children : null)) : shouldRender ? children : null);
  }

}

TabPane.isTabPane = true;
TabPane.contextType = _tabsContext.default;
TabPane.propTypes = {
  className: _propTypes.default.string,
  style: _propTypes.default.object,
  children: _propTypes.default.node,
  disabled: _propTypes.default.bool,
  itemKey: _propTypes.default.string,
  tab: _propTypes.default.node,
  icon: _propTypes.default.node,
  closable: _propTypes.default.bool
};
var _default = TabPane;
exports.default = _default;