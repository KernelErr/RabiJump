"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _concat = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/concat"));

var _isFunction2 = _interopRequireDefault(require("lodash/isFunction"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _constants = require("@douyinfe/semi-foundation/lib/cjs/steps/constants");

var _semiIcons = require("@douyinfe/semi-icons");

const FillStep = props => {
  var _context;

  const {
    prefixCls,
    className,
    title,
    description,
    status,
    style,
    onClick,
    icon,
    onChange,
    stepNumber,
    onKeyDown
  } = props;

  const renderIcon = () => {
    let inner, progress;

    if ('icon' in props) {
      inner = icon;
    } else if ('status' in props) {
      switch (status) {
        case 'error':
          inner = /*#__PURE__*/_react.default.createElement(_semiIcons.IconAlertCircle, {
            size: "extra-large"
          });
          break;

        case 'wait':
          inner = stepNumber;
          break;

        case 'process':
          inner = stepNumber;
          progress = true;
          break;

        case 'finish':
          inner = /*#__PURE__*/_react.default.createElement(_semiIcons.IconTickCircle, {
            size: "extra-large"
          });
          break;

        case 'warning':
          inner = /*#__PURE__*/_react.default.createElement(_semiIcons.IconAlertTriangle, {
            size: "extra-large"
          });
          break;

        default:
          inner = null;
          break;
      }
    }

    const cls = (0, _classnames.default)({
      ["".concat(prefixCls, "-left")]: true,
      ["".concat(prefixCls, "-icon")]: 'icon' in props,
      ["".concat(prefixCls, "-plain")]: !('icon' in props),
      ["".concat(prefixCls, "-icon-process")]: progress
    });
    return inner ? /*#__PURE__*/_react.default.createElement("div", {
      className: cls
    }, inner) : null;
  };

  const handleClick = e => {
    if ((0, _isFunction2.default)(onClick)) {
      onClick(e);
    }

    onChange();
  };

  const handleKeyDown = e => {
    if (e.key === 'Enter') {
      if ((0, _isFunction2.default)(onKeyDown)) {
        onKeyDown(e);
      }

      onChange();
    }
  };

  return /*#__PURE__*/_react.default.createElement("div", {
    role: props["role"],
    "aria-label": props["aria-label"],
    "aria-current": "step",
    tabIndex: 0,
    className: (0, _classnames.default)({
      [prefixCls]: true,
      [(0, _concat.default)(_context = "".concat(prefixCls, "-")).call(_context, status)]: Boolean(status),
      ["".concat(prefixCls, "-clickable")]: onClick
    }, className),
    style: style,
    onClick: e => {
      handleClick(e);
    },
    onKeyDown: handleKeyDown
  }, renderIcon(), /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(prefixCls, "-content")
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(prefixCls, "-title"),
    title: typeof title === 'string' ? title : null
  }, /*#__PURE__*/_react.default.createElement("span", {
    className: "".concat(prefixCls, "-title-text")
  }, title)), /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(prefixCls, "-description"),
    title: typeof description === 'string' ? description : null
  }, description)));
};

FillStep.propTypes = {
  prefixCls: _propTypes.default.string,
  description: _propTypes.default.node,
  icon: _propTypes.default.node,
  status: _propTypes.default.oneOf(['wait', 'process', 'finish', 'error', 'warning']),
  title: _propTypes.default.node,
  className: _propTypes.default.string,
  style: _propTypes.default.object,
  onClick: _propTypes.default.func
};
FillStep.defaultProps = {
  prefixCls: _constants.stepsClasses.ITEM,
  status: 'wait',
  className: ''
};
var _default = FillStep;
exports.default = _default;