"use strict";

var _WeakMap = require("@babel/runtime-corejs3/core-js-stable/weak-map");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

var _Object$getOwnPropertyDescriptor = require("@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _assign = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/object/assign"));

var _concat = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/concat"));

var _isNumber2 = _interopRequireDefault(require("lodash/isNumber"));

var _isArray2 = _interopRequireDefault(require("lodash/isArray"));

var _isString2 = _interopRequireDefault(require("lodash/isString"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _constants = require("@douyinfe/semi-foundation/lib/cjs/space/constants");

require("@douyinfe/semi-foundation/lib/cjs/space/space.css");

var _utils = require("./utils");

function _getRequireWildcardCache(nodeInterop) { if (typeof _WeakMap !== "function") return null; var cacheBabelInterop = new _WeakMap(); var cacheNodeInterop = new _WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = _Object$defineProperty && _Object$getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? _Object$getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { _Object$defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const prefixCls = _constants.cssClasses.PREFIX;

class Space extends _react.PureComponent {
  render() {
    var _context;

    const {
      children = null,
      style,
      className,
      spacing,
      wrap,
      align,
      vertical
    } = this.props;
    const isWrap = wrap && vertical ? false : wrap;
    const realStyle = (0, _assign.default)({}, style);
    let spacingHorizontalType = '';
    let spacingVerticalType = '';

    if ((0, _isString2.default)(spacing)) {
      spacingHorizontalType = spacing;
      spacingVerticalType = spacing;
    } else if ((0, _isNumber2.default)(spacing)) {
      realStyle.rowGap = spacing;
      realStyle.columnGap = spacing;
    } else if ((0, _isArray2.default)(spacing)) {
      if ((0, _isString2.default)(spacing[0])) {
        spacingHorizontalType = spacing[0];
      } else if ((0, _isNumber2.default)(spacing[0])) {
        realStyle.columnGap = "".concat(spacing[0], "px");
      }

      if ((0, _isString2.default)(spacing[1])) {
        spacingVerticalType = spacing[1];
      } else if ((0, _isNumber2.default)(spacing[1])) {
        realStyle.rowGap = "".concat(spacing[1], "px");
      }
    }

    const classNames = (0, _classnames.default)(prefixCls, className, {
      [(0, _concat.default)(_context = "".concat(prefixCls, "-align-")).call(_context, align)]: align,
      ["".concat(prefixCls, "-vertical")]: vertical,
      ["".concat(prefixCls, "-horizontal")]: !vertical,
      ["".concat(prefixCls, "-wrap")]: isWrap,
      ["".concat(prefixCls, "-tight-horizontal")]: spacingHorizontalType === _constants.strings.SPACING_TIGHT,
      ["".concat(prefixCls, "-tight-vertical")]: spacingVerticalType === _constants.strings.SPACING_TIGHT,
      ["".concat(prefixCls, "-medium-horizontal")]: spacingHorizontalType === _constants.strings.SPACING_MEDIUM,
      ["".concat(prefixCls, "-medium-vertical")]: spacingVerticalType === _constants.strings.SPACING_MEDIUM,
      ["".concat(prefixCls, "-loose-horizontal")]: spacingHorizontalType === _constants.strings.SPACING_LOOSE,
      ["".concat(prefixCls, "-loose-vertical")]: spacingVerticalType === _constants.strings.SPACING_LOOSE
    });
    const childrenNodes = (0, _utils.flatten)(children);
    return /*#__PURE__*/_react.default.createElement("div", {
      className: classNames,
      style: realStyle,
      "x-semi-prop": "children"
    }, childrenNodes);
  }

}

Space.propTypes = {
  wrap: _propTypes.default.bool,
  align: _propTypes.default.oneOf(_constants.strings.ALIGN_SET),
  vertical: _propTypes.default.bool,
  spacing: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.array]),
  children: _propTypes.default.node,
  style: _propTypes.default.object,
  className: _propTypes.default.string
};
Space.defaultProps = {
  vertical: false,
  wrap: false,
  spacing: 'tight',
  align: 'center'
};
var _default = Space;
exports.default = _default;