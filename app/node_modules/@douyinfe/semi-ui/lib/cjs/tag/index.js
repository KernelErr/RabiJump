"use strict";

var _context8;

var _WeakMap = require("@babel/runtime-corejs3/core-js-stable/weak-map");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

var _Object$getOwnPropertyDescriptor = require("@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor");

var _forEachInstanceProperty = require("@babel/runtime-corejs3/core-js-stable/instance/for-each");

var _Object$keys = require("@babel/runtime-corejs3/core-js-stable/object/keys");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

var _exportNames = {};
exports.default = void 0;

var _indexOf = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/index-of"));

var _getOwnPropertySymbols = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols"));

var _bind = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/bind"));

var _assign = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/object/assign"));

var _concat = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/concat"));

var _isString2 = _interopRequireDefault(require("lodash/isString"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _constants = require("@douyinfe/semi-foundation/lib/cjs/tag/constants");

var _index = _interopRequireDefault(require("../avatar/index"));

var _semiIcons = require("@douyinfe/semi-icons");

var _a11y = require("@douyinfe/semi-foundation/lib/cjs/utils/a11y");

require("@douyinfe/semi-foundation/lib/cjs/tag/tag.css");

var _interface = require("./interface");

_forEachInstanceProperty(_context8 = _Object$keys(_interface)).call(_context8, function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _interface[key]) return;

  _Object$defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _interface[key];
    }
  });
});

function _getRequireWildcardCache(nodeInterop) { if (typeof _WeakMap !== "function") return null; var cacheBabelInterop = new _WeakMap(); var cacheNodeInterop = new _WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = _Object$defineProperty && _Object$getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? _Object$getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { _Object$defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};

  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && (0, _indexOf.default)(e).call(e, p) < 0) t[p] = s[p];

  if (s != null && typeof _getOwnPropertySymbols.default === "function") for (var i = 0, p = (0, _getOwnPropertySymbols.default)(s); i < p.length; i++) {
    if ((0, _indexOf.default)(e).call(e, p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
/* eslint-disable jsx-a11y/no-static-element-interactions */


const prefixCls = _constants.cssClasses.PREFIX;
const tagColors = _constants.strings.TAG_COLOR;
const tagSize = _constants.strings.TAG_SIZE;
const tagType = _constants.strings.TAG_TYPE;
const avatarShapeSet = _constants.strings.AVATAR_SHAPE;

class Tag extends _react.Component {
  constructor(props) {
    var _context, _context2;

    super(props);
    this.state = {
      visible: true
    };
    this.close = (0, _bind.default)(_context = this.close).call(_context, this);
    this.handleKeyDown = (0, _bind.default)(_context2 = this.handleKeyDown).call(_context2, this);
  } // any other way to achieve this?


  static getDerivedStateFromProps(nextProps) {
    if ('visible' in nextProps) {
      return {
        visible: nextProps.visible
      };
    }

    return null;
  }

  setVisible(visible) {
    if (!('visible' in this.props)) {
      this.setState({
        visible
      });
    }
  }

  close(e, value) {
    const {
      onClose
    } = this.props;
    e.stopPropagation();
    e.nativeEvent.stopImmediatePropagation();
    onClose && onClose(value, e); // when user call e.preventDefault() in onClick callback, tag will not hidden

    if (e.defaultPrevented) {
      return;
    }

    this.setVisible(false);
  }

  handleKeyDown(event) {
    const {
      closable,
      onClick,
      onKeyDown
    } = this.props;

    switch (event.key) {
      case "Backspace":
      case "Delete":
        closable && this.close(event, this.props.children);
        (0, _a11y.handlePrevent)(event);
        break;

      case "Enter":
        onClick(event);
        (0, _a11y.handlePrevent)(event);
        break;

      case 'Escape':
        event.target.blur();
        break;

      default:
        break;
    }

    onKeyDown && onKeyDown(event);
  }

  renderAvatar() {
    const {
      avatarShape,
      avatarSrc
    } = this.props;

    const avatar = /*#__PURE__*/_react.default.createElement(_index.default, {
      src: avatarSrc,
      shape: avatarShape
    });

    return avatar;
  }

  render() {
    var _context3, _context4, _context5, _context6, _context7;

    const _a = this.props,
          {
      children,
      size,
      color,
      closable,
      visible,
      onClose,
      onClick,
      className,
      type,
      avatarSrc,
      avatarShape,
      tabIndex
    } = _a,
          attr = __rest(_a, ["children", "size", "color", "closable", "visible", "onClose", "onClick", "className", "type", "avatarSrc", "avatarShape", "tabIndex"]);

    const {
      visible: isVisible
    } = this.state;
    const clickable = onClick !== Tag.defaultProps.onClick || closable; // only when the Tag is clickable or closable, the value of tabIndex is allowed to be passed in. 

    const a11yProps = {
      role: 'button',
      tabIndex: tabIndex | 0,
      onKeyDown: this.handleKeyDown
    };
    const baseProps = (0, _assign.default)((0, _assign.default)({}, attr), {
      onClick,
      className: (0, _classnames.default)(prefixCls, {
        ["".concat(prefixCls, "-default")]: size === 'default',
        ["".concat(prefixCls, "-small")]: size === 'small',
        ["".concat(prefixCls, "-large")]: size === 'large',
        [(0, _concat.default)(_context3 = "".concat(prefixCls, "-")).call(_context3, type)]: type,
        [(0, _concat.default)(_context4 = (0, _concat.default)(_context5 = "".concat(prefixCls, "-")).call(_context5, color, "-")).call(_context4, type)]: color && type,
        ["".concat(prefixCls, "-closable")]: closable,
        ["".concat(prefixCls, "-invisible")]: !isVisible,
        [(0, _concat.default)(_context6 = "".concat(prefixCls, "-avatar-")).call(_context6, avatarShape)]: avatarSrc
      }, className)
    });
    const wrapProps = clickable ? (0, _assign.default)((0, _assign.default)({}, baseProps), a11yProps) : baseProps;
    const closeIcon = closable ?
    /*#__PURE__*/
    // eslint-disable-next-line jsx-a11y/click-events-have-key-events
    _react.default.createElement("div", {
      className: "".concat(prefixCls, "-close"),
      onClick: e => this.close(e, children)
    }, /*#__PURE__*/_react.default.createElement(_semiIcons.IconClose, {
      size: "small"
    })) : null;
    return /*#__PURE__*/_react.default.createElement("div", (0, _assign.default)({
      "aria-label": this.props['aria-label'] || (0, _isString2.default)(children) ? (0, _concat.default)(_context7 = "".concat(closable ? 'Closable ' : '', "Tag: ")).call(_context7, children) : ''
    }, wrapProps), /*#__PURE__*/_react.default.createElement("div", {
      className: "".concat(prefixCls, "-content")
    }, avatarSrc ? this.renderAvatar() : null, children, closeIcon));
  }

}

exports.default = Tag;
Tag.defaultProps = {
  size: tagSize[0],
  color: tagColors[0],
  closable: false,
  // visible: true,
  type: tagType[0],
  onClose: () => undefined,
  onClick: () => undefined,
  style: {},
  className: '',
  avatarShape: 'square'
};
Tag.propTypes = {
  children: _propTypes.default.node,
  size: _propTypes.default.oneOf(tagSize),
  color: _propTypes.default.oneOf(tagColors),
  type: _propTypes.default.oneOf(tagType),
  closable: _propTypes.default.bool,
  visible: _propTypes.default.bool,
  onClose: _propTypes.default.func,
  onClick: _propTypes.default.func,
  style: _propTypes.default.object,
  className: _propTypes.default.string,
  avatarSrc: _propTypes.default.string,
  avatarShape: _propTypes.default.oneOf(avatarShapeSet),
  'aria-label': _propTypes.default.string
};