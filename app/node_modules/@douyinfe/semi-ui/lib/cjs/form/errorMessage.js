"use strict";

var _WeakMap = require("@babel/runtime-corejs3/core-js-stable/weak-map");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

var _Object$getOwnPropertyDescriptor = require("@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _isArray = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/array/is-array"));

var _filter = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/filter"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _constants = require("@douyinfe/semi-foundation/lib/cjs/form/constants");

var _semiIcons = require("@douyinfe/semi-icons");

function _getRequireWildcardCache(nodeInterop) { if (typeof _WeakMap !== "function") return null; var cacheBabelInterop = new _WeakMap(); var cacheNodeInterop = new _WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = _Object$defineProperty && _Object$getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? _Object$getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { _Object$defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/* eslint-disable prefer-template */
const prefix = _constants.cssClasses.PREFIX;

class ErrorMessage extends _react.PureComponent {
  generatorText(error) {
    const {
      helpTextId,
      errorMessageId
    } = this.props;
    const propsError = this.props.error;
    let id = errorMessageId;

    if (!propsError) {
      id = helpTextId;
    }

    if (typeof error === 'string') {
      return /*#__PURE__*/_react.default.createElement("span", {
        id: id
      }, error);
    } else if ((0, _isArray.default)(error)) {
      const err = (0, _filter.default)(error).call(error, e => e);
      return err.length ? /*#__PURE__*/_react.default.createElement("span", {
        id: id
      }, err.join(', ')) : null;
    } else if ( /*#__PURE__*/_react.default.isValidElement(error)) {
      return error;
    }

    return null;
  }

  render() {
    const {
      error,
      className,
      style,
      validateStatus,
      helpText,
      showValidateIcon,
      isInInputGroup
    } = this.props;
    const cls = (0, _classnames.default)({
      [prefix + '-field-error-message']: Boolean(error),
      [prefix + '-field-help-text']: Boolean(helpText)
    }, className);

    if (!error && !helpText) {
      return null;
    }

    const iconMap = {
      warning: /*#__PURE__*/_react.default.createElement(_semiIcons.IconAlertTriangle, null),
      error: /*#__PURE__*/_react.default.createElement(_semiIcons.IconAlertCircle, null)
    };
    const text = error ? this.generatorText(error) : this.generatorText(helpText);
    const iconCls = "".concat(prefix, "-field-validate-status-icon");
    let icon = null;

    if (isInInputGroup) {
      icon = /*#__PURE__*/_react.default.createElement(_semiIcons.IconAlertCircle, {
        className: iconCls
      });
    } else {
      if (iconMap[validateStatus]) {
        icon = /*#__PURE__*/_react.default.cloneElement(iconMap[validateStatus], {
          className: iconCls
        });
      }
    }

    return /*#__PURE__*/_react.default.createElement("div", {
      className: cls,
      style: style
    }, showValidateIcon && text ? icon : null, text);
  }

}

exports.default = ErrorMessage;
ErrorMessage.propTypes = {
  error: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string, _propTypes.default.array, _propTypes.default.node]),
  className: _propTypes.default.string,
  style: _propTypes.default.object,
  validateStatus: _propTypes.default.string,
  showValidateIcon: _propTypes.default.bool,
  helpText: _propTypes.default.node,
  isInInputGroup: _propTypes.default.bool,
  // internal props
  errorMessageId: _propTypes.default.string,
  helpTextId: _propTypes.default.string
};