"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = exports.RowContext = void 0;

var _indexOf = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/index-of"));

var _getOwnPropertySymbols = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols"));

var _map = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/map"));

var _keys = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/object/keys"));

var _assign = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/object/assign"));

var _forEach = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/for-each"));

var _isArray = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/array/is-array"));

var _slice = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/slice"));

var _concat = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/concat"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _constants = require("@douyinfe/semi-foundation/lib/cjs/grid/constants");

require("@douyinfe/semi-foundation/lib/cjs/grid/grid.css");

var _utils = require("../_utils");

var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};

  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && (0, _indexOf.default)(e).call(e, p) < 0) t[p] = s[p];

  if (s != null && typeof _getOwnPropertySymbols.default === "function") for (var i = 0, p = (0, _getOwnPropertySymbols.default)(s); i < p.length; i++) {
    if ((0, _indexOf.default)(e).call(e, p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
/**
 * Implementation reference from: https://github.com/ant-design/ant-design/blob/master/components/grid/row.tsx
 */


const responsiveArray = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];

const RowContext = /*#__PURE__*/_react.default.createContext(null);

exports.RowContext = RowContext;
const responsiveMap = {
  xs: '(max-width: 575px)',
  sm: '(min-width: 576px)',
  md: '(min-width: 768px)',
  lg: '(min-width: 992px)',
  xl: '(min-width: 1200px)',
  xxl: '(min-width: 1600px)'
};

class Row extends _react.default.Component {
  constructor() {
    super(...arguments);
    this.state = {
      screens: {
        xs: true,
        sm: true,
        md: true,
        lg: true,
        xl: true,
        xxl: true
      }
    };
    this.unRegisters = [];
  }

  componentDidMount() {
    var _context;

    this.unRegisters = (0, _map.default)(_context = (0, _keys.default)(responsiveMap)).call(_context, screen => (0, _utils.registerMediaQuery)(responsiveMap[screen], {
      match: () => {
        if (typeof this.props.gutter !== 'object') {
          return;
        }

        this.setState(prevState => ({
          screens: (0, _assign.default)((0, _assign.default)({}, prevState.screens), {
            [screen]: true
          })
        }));
      },
      unmatch: () => {
        if (typeof this.props.gutter !== 'object') {
          return;
        }

        this.setState(prevState => ({
          screens: (0, _assign.default)((0, _assign.default)({}, prevState.screens), {
            [screen]: false
          })
        }));
      }
    }));
  }

  componentWillUnmount() {
    var _context2;

    (0, _forEach.default)(_context2 = this.unRegisters).call(_context2, unRegister => unRegister());
  }

  getGutter() {
    const {
      gutter = 0
    } = this.props;
    const results = [0, 0];
    const normalizedGutter = (0, _isArray.default)(gutter) ? (0, _slice.default)(gutter).call(gutter, 0, 2) : [gutter, 0];
    (0, _forEach.default)(normalizedGutter).call(normalizedGutter, (g, index) => {
      if (typeof g === 'object') {
        for (let i = 0; i < responsiveArray.length; i++) {
          const breakpoint = responsiveArray[i];

          if (this.state.screens[breakpoint] && g[breakpoint] !== undefined) {
            results[index] = g[breakpoint];
            break;
          }
        }
      } else {
        results[index] = g || 0;
      }
    });
    return results;
  }

  render() {
    var _context3, _context4, _context5, _context6, _context7;

    const _a = this.props,
          {
      prefixCls,
      type,
      justify,
      align,
      className,
      style,
      children
    } = _a,
          others = __rest(_a, ["prefixCls", "type", "justify", "align", "className", "style", "children"]);

    const gutters = this.getGutter();
    const prefix = "".concat(prefixCls, "-row");
    const classes = (0, _classnames.default)({
      [prefix]: type !== 'flex',
      [(0, _concat.default)(_context3 = "".concat(prefix, "-")).call(_context3, type)]: type,
      [(0, _concat.default)(_context4 = (0, _concat.default)(_context5 = "".concat(prefix, "-")).call(_context5, type, "-")).call(_context4, justify)]: type && justify,
      [(0, _concat.default)(_context6 = (0, _concat.default)(_context7 = "".concat(prefix, "-")).call(_context7, type, "-")).call(_context6, align)]: type && align
    }, className);
    const rowStyle = (0, _assign.default)((0, _assign.default)((0, _assign.default)({}, gutters[0] > 0 ? {
      marginLeft: gutters[0] / -2,
      marginRight: gutters[0] / -2
    } : {}), gutters[1] > 0 ? {
      marginTop: gutters[1] / -2,
      marginBottom: gutters[1] / -2
    } : {}), style);
    const otherProps = (0, _assign.default)({}, others);
    delete otherProps.gutter;
    return /*#__PURE__*/_react.default.createElement(RowContext.Provider, {
      value: {
        gutters
      }
    }, /*#__PURE__*/_react.default.createElement("div", (0, _assign.default)({}, otherProps, {
      className: classes,
      style: rowStyle,
      "x-semi-prop": "children"
    }), children));
  }

}

Row.propTypes = {
  type: _propTypes.default.oneOf(['flex']),
  align: _propTypes.default.oneOf(['top', 'middle', 'bottom']),
  justify: _propTypes.default.oneOf(['start', 'end', 'center', 'space-around', 'space-between']),
  className: _propTypes.default.string,
  style: _propTypes.default.object,
  children: _propTypes.default.node,
  gutter: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number, _propTypes.default.array]),
  prefixCls: _propTypes.default.string
};
Row.defaultProps = {
  prefixCls: _constants.cssClasses.PREFIX
};
Row.RowContext = {
  gutters: _propTypes.default.any
};
var _default = Row;
exports.default = _default;