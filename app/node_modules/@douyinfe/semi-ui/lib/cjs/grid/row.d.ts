/**
 * Implementation reference from: https://github.com/ant-design/ant-design/blob/master/components/grid/row.tsx
 */
import React from 'react';
import PropTypes from 'prop-types';
import '@douyinfe/semi-foundation/lib/cjs/grid/grid.css';
export interface RowContextType {
    gutters?: Gutter | [Gutter, Gutter];
}
export declare const RowContext: React.Context<RowContextType>;
export declare type Breakpoint = 'xxl' | 'xl' | 'lg' | 'md' | 'sm' | 'xs';
export declare type Gutter = number | Partial<Record<Breakpoint, number>>;
export interface RowProps {
    type?: 'flex';
    align?: 'top' | 'middle' | 'bottom';
    justify?: 'start' | 'end' | 'center' | 'space-around' | 'space-between';
    className?: string;
    style?: React.CSSProperties;
    children?: React.ReactNode;
    gutter?: Gutter | [Gutter, Gutter];
    prefixCls?: string;
}
export interface RowState {
    screens: Partial<Record<Breakpoint, boolean>>;
}
declare class Row extends React.Component<RowProps, RowState> {
    static propTypes: {
        type: PropTypes.Requireable<string>;
        align: PropTypes.Requireable<string>;
        justify: PropTypes.Requireable<string>;
        className: PropTypes.Requireable<string>;
        style: PropTypes.Requireable<object>;
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        gutter: PropTypes.Requireable<number | object>;
        prefixCls: PropTypes.Requireable<string>;
    };
    static defaultProps: {
        prefixCls: string;
    };
    static RowContext: {
        gutters: PropTypes.Requireable<any>;
    };
    state: {
        screens: {
            xs: boolean;
            sm: boolean;
            md: boolean;
            lg: boolean;
            xl: boolean;
            xxl: boolean;
        };
    };
    unRegisters: Array<() => void>;
    componentDidMount(): void;
    componentWillUnmount(): void;
    getGutter(): [number, number];
    render(): JSX.Element;
}
export default Row;
