"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _indexOf = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/index-of"));

var _getOwnPropertySymbols = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols"));

var _assign = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/object/assign"));

var _concat = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/concat"));

var _noop2 = _interopRequireDefault(require("lodash/noop"));

var _react = _interopRequireDefault(require("react"));

var _baseComponent = _interopRequireDefault(require("../_base/baseComponent"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _portal = _interopRequireDefault(require("../_portal"));

var _classnames = _interopRequireDefault(require("classnames"));

var _context2 = _interopRequireDefault(require("../configProvider/context"));

var _constants = require("@douyinfe/semi-foundation/lib/cjs/sideSheet/constants");

var _SideSheetTransition = _interopRequireDefault(require("./SideSheetTransition"));

var _SideSheetContent = _interopRequireDefault(require("./SideSheetContent"));

var _sideSheetFoundation = _interopRequireDefault(require("@douyinfe/semi-foundation/lib/cjs/sideSheet/sideSheetFoundation"));

require("@douyinfe/semi-foundation/lib/cjs/sideSheet/sideSheet.css");

var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};

  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && (0, _indexOf.default)(e).call(e, p) < 0) t[p] = s[p];

  if (s != null && typeof _getOwnPropertySymbols.default === "function") for (var i = 0, p = (0, _getOwnPropertySymbols.default)(s); i < p.length; i++) {
    if ((0, _indexOf.default)(e).call(e, p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
/* eslint-disable no-nested-ternary */


const prefixCls = _constants.cssClasses.PREFIX;
const defaultWidthList = _constants.strings.WIDTH;
const defaultHeight = _constants.strings.HEIGHT;

class SideSheet extends _baseComponent.default {
  constructor(props) {
    super(props);

    this.handleCancel = e => {
      this.foundation.handleCancel(e);
    };

    this.handleKeyDown = e => {
      this.foundation.handleKeyDown(e);
    };

    this.state = {
      hidden: !this.props.visible
    };
    this.foundation = new _sideSheetFoundation.default(this.adapter);
    this._active = false;
  }

  get adapter() {
    return (0, _assign.default)((0, _assign.default)({}, super.adapter), {
      disabledBodyScroll: () => {
        const {
          getPopupContainer
        } = this.props;

        if (!getPopupContainer && document) {
          document.body.style.overflow = 'hidden';
        }
      },
      enabledBodyScroll: () => {
        const {
          getPopupContainer
        } = this.props;

        if (!getPopupContainer && document) {
          document.body.style.overflow = '';
        }
      },
      notifyCancel: e => {
        this.props.onCancel && this.props.onCancel(e);
      },
      notifyVisibleChange: visible => {
        this.props.afterVisibleChange(visible);
      },
      setOnKeyDownListener: () => {
        if (window) {
          window.addEventListener('keydown', this.handleKeyDown);
        }
      },
      removeKeyDownListener: () => {
        if (window) {
          window.removeEventListener('keydown', this.handleKeyDown);
        }
      },
      toggleHidden: hidden => {
        if (hidden !== this.state.hidden) {
          this.setState({
            hidden
          });
        }
      }
    });
  }

  static getDerivedStateFromProps(props, prevState) {
    const newState = {};

    if (props.visible && prevState.hidden) {
      newState.hidden = false;
    }

    if (!props.visible && !props.motion && !prevState.hidden) {
      newState.hidden = true;
    }

    return newState;
  }

  componentDidMount() {
    if (this.props.visible) {
      this.foundation.beforeShow();
      this._active = this._active || this.props.visible;
    }
  }

  componentDidUpdate(prevProps, prevState, snapshot) {
    // hide => show
    if (!prevProps.visible && this.props.visible) {
      this.foundation.beforeShow();
    } // show => hide


    if (prevProps.visible && !this.props.visible) {
      this.foundation.afterHide();
    }
  }

  componentWillUnmount() {
    if (this.props.visible) {
      this.foundation.destroy();
    }
  }

  renderContent() {
    var _context;

    const _a = this.props,
          {
      placement,
      className,
      children,
      width,
      height,
      motion,
      visible,
      style,
      maskStyle,
      size,
      zIndex,
      getPopupContainer,
      keepDOM
    } = _a,
          props = __rest(_a, ["placement", "className", "children", "width", "height", "motion", "visible", "style", "maskStyle", "size", "zIndex", "getPopupContainer", "keepDOM"]);

    const {
      direction
    } = this.context;
    const isVertical = placement === 'left' || placement === 'right';
    const isHorizontal = placement === 'top' || placement === 'bottom';
    const sheetWidth = isVertical ? width ? width : defaultWidthList[size] : '100%';
    const sheetHeight = isHorizontal ? height ? height : defaultHeight : '100%';
    const classList = (0, _classnames.default)(prefixCls, className, {
      [(0, _concat.default)(_context = "".concat(prefixCls, "-")).call(_context, placement)]: placement,
      ["".concat(prefixCls, "-popup")]: getPopupContainer,
      ["".concat(prefixCls, "-horizontal")]: isHorizontal,
      ["".concat(prefixCls, "-rtl")]: direction === 'rtl',
      ["".concat(prefixCls, "-hidden")]: keepDOM && this.state.hidden
    });
    const contentProps = (0, _assign.default)((0, _assign.default)({}, props), {
      visible,
      motion: false,
      className: classList,
      width: sheetWidth,
      height: sheetHeight,
      onClose: this.handleCancel
    });
    const mergedMotion = this.foundation.getMergedMotion();
    this._active = this._active || visible;
    const shouldRender = (visible || keepDOM) && this._active;

    if (mergedMotion) {
      return /*#__PURE__*/_react.default.createElement(_SideSheetTransition.default, {
        placement: placement,
        motion: mergedMotion,
        controlled: keepDOM,
        visible: visible
      }, shouldRender ? transitionStyles => /*#__PURE__*/_react.default.createElement(_SideSheetContent.default, (0, _assign.default)({}, contentProps, {
        style: (0, _assign.default)((0, _assign.default)({}, transitionStyles), style),
        maskStyle: (0, _assign.default)({
          opacity: transitionStyles.opacity
        }, maskStyle)
      }), children) : null);
    }

    if (shouldRender) {
      return /*#__PURE__*/_react.default.createElement(_SideSheetContent.default, (0, _assign.default)({}, contentProps, {
        style: style,
        maskStyle: maskStyle
      }), children);
    }

    return null;
  }

  render() {
    const {
      zIndex,
      getPopupContainer
    } = this.props;
    let wrapperStyle = {
      zIndex
    };

    if (getPopupContainer) {
      wrapperStyle = {
        zIndex,
        position: 'static'
      };
    }

    return /*#__PURE__*/_react.default.createElement(_portal.default, {
      getPopupContainer: getPopupContainer,
      style: wrapperStyle
    }, this.renderContent());
  }

}

exports.default = SideSheet;
SideSheet.contextType = _context2.default;
SideSheet.propTypes = {
  bodyStyle: _propTypes.default.object,
  headerStyle: _propTypes.default.object,
  children: _propTypes.default.node,
  className: _propTypes.default.string,
  closable: _propTypes.default.bool,
  disableScroll: _propTypes.default.bool,
  getPopupContainer: _propTypes.default.func,
  height: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  mask: _propTypes.default.bool,
  maskClosable: _propTypes.default.bool,
  maskStyle: _propTypes.default.object,
  motion: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.object, _propTypes.default.func]),
  onCancel: _propTypes.default.func,
  placement: _propTypes.default.oneOf(_constants.strings.PLACEMENT),
  size: _propTypes.default.oneOf(_constants.strings.SIZE),
  style: _propTypes.default.object,
  title: _propTypes.default.node,
  visible: _propTypes.default.bool,
  width: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  zIndex: _propTypes.default.number,
  afterVisibleChange: _propTypes.default.func,
  closeOnEsc: _propTypes.default.bool,
  footer: _propTypes.default.node,
  keepDOM: _propTypes.default.bool,
  'aria-label': _propTypes.default.string
};
SideSheet.defaultProps = {
  visible: false,
  motion: true,
  mask: true,
  placement: 'right',
  closable: true,
  footer: null,
  zIndex: 1000,
  maskClosable: true,
  size: 'small',
  disableScroll: true,
  closeOnEsc: false,
  afterVisibleChange: _noop2.default,
  keepDOM: false
};