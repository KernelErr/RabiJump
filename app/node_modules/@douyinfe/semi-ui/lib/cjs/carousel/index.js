"use strict";

var _WeakMap = require("@babel/runtime-corejs3/core-js-stable/weak-map");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

var _Object$getOwnPropertyDescriptor = require("@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _filter = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/filter"));

var _map = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/map"));

var _assign = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/object/assign"));

var _concat = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/concat"));

var _debounce2 = _interopRequireDefault(require("lodash/debounce"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _baseComponent = _interopRequireDefault(require("../_base/baseComponent"));

var _constants = require("@douyinfe/semi-foundation/lib/cjs/carousel/constants");

var _foundation = _interopRequireDefault(require("@douyinfe/semi-foundation/lib/cjs/carousel/foundation"));

var _CarouselIndicator = _interopRequireDefault(require("./CarouselIndicator"));

var _CarouselArrow = _interopRequireDefault(require("./CarouselArrow"));

require("@douyinfe/semi-foundation/lib/cjs/carousel/carousel.css");

var _isNullOrUndefined = _interopRequireDefault(require("@douyinfe/semi-foundation/lib/cjs/utils/isNullOrUndefined"));

function _getRequireWildcardCache(nodeInterop) { if (typeof _WeakMap !== "function") return null; var cacheBabelInterop = new _WeakMap(); var cacheNodeInterop = new _WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = _Object$defineProperty && _Object$getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? _Object$getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { _Object$defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/* eslint-disable jsx-a11y/no-static-element-interactions */
class Carousel extends _baseComponent.default {
  constructor(props) {
    super(props);

    this.play = () => {
      return this.foundation.handleAutoPlay();
    };

    this.stop = () => {
      return this.foundation.stop();
    };

    this.goTo = targetIndex => {
      return this.foundation.goTo(targetIndex);
    };

    this.prev = () => {
      return this.foundation.prev();
    };

    this.next = () => {
      return this.foundation.next();
    };

    this.handleAutoPlay = () => {
      if (!this.foundation.getIsControledComponent()) {
        this.foundation.handleAutoPlay();
      }
    };

    this.handleMouseEnter = () => {
      const {
        autoPlay
      } = this.props;

      if (typeof autoPlay !== 'object' || autoPlay.hoverToPause) {
        this.foundation.stop();
      }
    };

    this.handleMouseLeave = () => {
      const {
        autoPlay
      } = this.props;

      if ((typeof autoPlay !== 'object' || autoPlay.hoverToPause) && !this.foundation.getIsControledComponent()) {
        this.foundation.handleAutoPlay();
      }
    };

    this.onIndicatorChange = activeIndex => {
      return this.foundation.onIndicatorChange(activeIndex);
    };

    this.getChildren = () => {
      var _context;

      const {
        children: originChildren
      } = this.props;
      return (0, _filter.default)(_context = _react.Children.toArray(originChildren)).call(_context, child => {
        return /*#__PURE__*/_react.default.isValidElement(child);
      });
    };

    this.getValidIndex = activeIndex => {
      return this.foundation.getValidIndex(activeIndex);
    };

    this.renderChildren = () => {
      const {
        speed,
        animation
      } = this.props;
      const {
        activeIndex,
        children,
        preIndex,
        isInit
      } = this.state;
      return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, (0, _map.default)(children).call(children, (child, index) => {
        const isCurrent = index === activeIndex;
        const isPrev = index === this.getValidIndex(activeIndex - 1);
        const isNext = index === this.getValidIndex(activeIndex + 1);
        const animateStyle = {
          transitionTimingFunction: 'ease',
          transitionDuration: "".concat(speed, "ms"),
          animationTimingFunction: 'ease',
          animationDuration: "".concat(speed, "ms")
        };
        return /*#__PURE__*/_react.default.cloneElement(child, {
          style: (0, _assign.default)((0, _assign.default)({}, child.props.style), animateStyle),
          className: (0, _classnames.default)(child.props.className, {
            ["".concat(_constants.cssClasses.CAROUSEL_CONTENT, "-item-prev")]: isPrev,
            ["".concat(_constants.cssClasses.CAROUSEL_CONTENT, "-item-next")]: isNext,
            ["".concat(_constants.cssClasses.CAROUSEL_CONTENT, "-item-current")]: isCurrent,
            ["".concat(_constants.cssClasses.CAROUSEL_CONTENT, "-item")]: true,
            ["".concat(_constants.cssClasses.CAROUSEL_CONTENT, "-item-active")]: isCurrent,
            ["".concat(_constants.cssClasses.CAROUSEL_CONTENT, "-item-slide-in")]: animation === 'slide' && !isInit && isCurrent,
            ["".concat(_constants.cssClasses.CAROUSEL_CONTENT, "-item-slide-out")]: animation === 'slide' && !isInit && index === preIndex
          })
        });
      }));
    };

    this.renderIndicator = () => {
      const {
        children,
        activeIndex
      } = this.state;
      const {
        showIndicator,
        indicatorType,
        theme,
        indicatorPosition,
        indicatorSize,
        trigger
      } = this.props;
      const carouselIndicatorCls = (0, _classnames.default)({
        [_constants.cssClasses.CAROUSEL_INDICATOR]: true
      });

      if (showIndicator && children.length > 1) {
        return /*#__PURE__*/_react.default.createElement("div", {
          className: carouselIndicatorCls
        }, /*#__PURE__*/_react.default.createElement(_CarouselIndicator.default, {
          type: indicatorType,
          total: children.length,
          activeIndex: activeIndex,
          position: indicatorPosition,
          trigger: trigger,
          size: indicatorSize,
          theme: theme,
          onIndicatorChange: this.onIndicatorChange
        }));
      }

      return null;
    };

    this.renderArrow = () => {
      const {
        children
      } = this.state;
      const {
        showArrow,
        arrowType,
        theme,
        arrowProps
      } = this.props;

      if (showArrow && children.length > 1) {
        return /*#__PURE__*/_react.default.createElement(_CarouselArrow.default, {
          type: arrowType,
          theme: theme,
          prev: this.prev,
          next: this.next,
          arrowProps: arrowProps
        });
      }

      return null;
    };

    this.foundation = new _foundation.default(this.adapter);
    const defaultActiveIndex = this.foundation.getDefaultActiveIndex();
    this.state = {
      activeIndex: defaultActiveIndex,
      children: this.getChildren(),
      preIndex: defaultActiveIndex,
      isReverse: false,
      isInit: true
    };
  }

  get adapter() {
    return (0, _assign.default)((0, _assign.default)({}, super.adapter), {
      notifyChange: (activeIndex, preIndex) => {
        this.props.onChange(activeIndex, preIndex);
      },
      setNewActiveIndex: activeIndex => {
        this.setState({
          activeIndex
        });
      },
      setPreActiveIndex: preIndex => {
        this.setState({
          preIndex
        });
      },
      setIsReverse: isReverse => {
        this.setState({
          isReverse
        });
      },
      setIsInit: isInit => {
        this.setState({
          isInit
        });
      }
    });
  }

  static getDerivedStateFromProps(props, state) {
    const states = {};

    if (!(0, _isNullOrUndefined.default)(props.activeIndex) && props.activeIndex !== state.activeIndex) {
      states.activeIndex = props.activeIndex;
    }

    return states;
  }

  componentDidMount() {
    this.handleAutoPlay();
  }

  componentWillUnmount() {
    this.foundation.destroy();
  }

  render() {
    var _context2;

    const {
      animation,
      className,
      style,
      slideDirection
    } = this.props;
    const {
      isReverse
    } = this.state;
    const carouselWrapperCls = (0, _classnames.default)(className, {
      [_constants.cssClasses.CAROUSEL]: true
    });
    return /*#__PURE__*/_react.default.createElement("div", {
      // role='listbox'
      // tabIndex={0}
      className: carouselWrapperCls,
      style: style,
      onMouseEnter: (0, _debounce2.default)(this.handleMouseEnter, 400),
      onMouseLeave: (0, _debounce2.default)(this.handleMouseLeave, 400)
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: (0, _classnames.default)([(0, _concat.default)(_context2 = "".concat(_constants.cssClasses.CAROUSEL_CONTENT, "-")).call(_context2, animation)], {
        ["".concat(_constants.cssClasses.CAROUSEL_CONTENT)]: true,
        ["".concat(_constants.cssClasses.CAROUSEL_CONTENT, "-reverse")]: slideDirection === 'left' ? isReverse : !isReverse
      }),
      "x-semi-prop": "children"
    }, this.renderChildren()), this.renderIndicator(), this.renderArrow());
  }

}

Carousel.propTypes = {
  activeIndex: _propTypes.default.number,
  animation: _propTypes.default.oneOf(_constants.strings.ANIMATION_MAP),
  arrowProps: _propTypes.default.object,
  autoPlay: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.object]),
  className: _propTypes.default.string,
  defaultActiveIndex: _propTypes.default.number,
  indicatorPosition: _propTypes.default.oneOf(_constants.strings.POSITION_MAP),
  indicatorSize: _propTypes.default.oneOf(_constants.strings.SIZE),
  indicatorType: _propTypes.default.oneOf(_constants.strings.TYPE_MAP),
  theme: _propTypes.default.oneOf(_constants.strings.THEME_MAP),
  onChange: _propTypes.default.func,
  arrowType: _propTypes.default.oneOf(_constants.strings.ARROW_MAP),
  showArrow: _propTypes.default.bool,
  showIndicator: _propTypes.default.bool,
  slideDirection: _propTypes.default.oneOf(_constants.strings.DIRECTION),
  speed: _propTypes.default.number,
  style: _propTypes.default.object,
  trigger: _propTypes.default.oneOf(_constants.strings.TRIGGER)
};
Carousel.defaultProps = {
  children: [],
  animation: 'slide',
  autoPlay: true,
  arrowType: 'always',
  defaultActiveIndex: _constants.numbers.DEFAULT_ACTIVE_INDEX,
  indicatorPosition: 'center',
  indicatorSize: 'small',
  indicatorType: 'dot',
  theme: 'light',
  onChange: () => undefined,
  showArrow: true,
  showIndicator: true,
  slideDirection: 'left',
  speed: _constants.numbers.DEFAULT_SPEED,
  trigger: 'click'
};
var _default = Carousel;
exports.default = _default;