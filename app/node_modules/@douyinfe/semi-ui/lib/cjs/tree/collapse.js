"use strict";

var _WeakMap = require("@babel/runtime-corejs3/core-js-stable/weak-map");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

var _Object$getOwnPropertyDescriptor = require("@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _assign = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/object/assign"));

var _noop2 = _interopRequireDefault(require("lodash/noop"));

var _react = _interopRequireWildcard(require("react"));

var _semiAnimationReact = require("@douyinfe/semi-animation-react");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _constants = require("@douyinfe/semi-foundation/lib/cjs/collapsible/constants");

var _getMotionObjFromProps = _interopRequireDefault(require("@douyinfe/semi-foundation/lib/cjs/utils/getMotionObjFromProps"));

function _getRequireWildcardCache(nodeInterop) { if (typeof _WeakMap !== "function") return null; var cacheBabelInterop = new _WeakMap(); var cacheNodeInterop = new _WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = _Object$defineProperty && _Object$getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? _Object$getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { _Object$defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/* eslint-disable arrow-body-style */
const ease = 'cubicBezier(.25,.1,.25,1)';

const Collapse = props => {
  const {
    motion,
    children,
    duration,
    onMotionEnd,
    motionType
  } = props;
  const ref = (0, _react.useRef)(null);
  const [maxHeight, setMaxHeight] = (0, _react.useState)(0); // cache last state

  const [open, setOpen] = (0, _react.useState)(true);
  const [left, setLeft] = (0, _react.useState)(false);
  const [immediateAttr, setImmediateAttr] = (0, _react.useState)(false);
  (0, _react.useEffect)(() => {
    if (motionType === 'enter') {
      !open && setOpen(true);
      left && setLeft(false);
    } else if (motionType === 'leave') {
      !open && setOpen(true);
      !immediateAttr && setImmediateAttr(true);
      left && setLeft(false);
    }
  }, [motionType]);
  const setHeight = (0, _react.useCallback)(node => {
    const currHeight = node && node.scrollHeight;

    if (currHeight && maxHeight !== currHeight) {
      setMaxHeight(currHeight);
    }
  }, [left]);

  const resetHeight = () => {
    ref.current.style.maxHeight = 'none';
  };

  const formatStyle = style => {
    // eslint-disable-next-line @typescript-eslint/no-shadow
    const {
      maxHeight
    } = style;
    return {
      maxHeight
    };
  };

  const renderChildren = transitionStyle => {
    const transition = transitionStyle && typeof transitionStyle === 'object' ? formatStyle(transitionStyle) : {};
    const style = (0, _assign.default)({
      overflow: 'hidden',
      maxHeight: open ? 'none' : 0
    }, transition);
    return /*#__PURE__*/_react.default.createElement("div", {
      style: style,
      className: "".concat(_constants.cssClasses.PREFIX, "-wrapper"),
      ref: ref
    }, /*#__PURE__*/_react.default.createElement("div", {
      ref: setHeight
    }, children));
  };

  const didLeave = () => {
    setLeft(true);
    setMaxHeight(0);
    motionType === 'leave' && onMotionEnd();
  };

  const onImmediateEnter = () => {
    open && setOpen(false);
    setImmediateAttr(false);
  };

  const didEnter = () => {
    resetHeight();
    immediateAttr && onImmediateEnter();
    motionType === 'enter' && onMotionEnd();
  };

  const renderContent = () => {
    if (left) {
      return null;
    }

    const mergeMotion = (0, _getMotionObjFromProps.default)({
      didEnter,
      didLeave,
      motion
    });
    return motion ? /*#__PURE__*/_react.default.createElement(_semiAnimationReact.Transition, (0, _assign.default)({
      state: open ? 'enter' : 'leave',
      immediate: immediateAttr,
      from: {
        maxHeight: 0
      },
      enter: {
        maxHeight: {
          val: maxHeight,
          easing: ease,
          duration
        }
      },
      leave: {
        maxHeight: {
          val: 0,
          easing: ease,
          duration
        }
      }
    }, mergeMotion), transitionStyle => renderChildren(transitionStyle)) : renderChildren(null);
  };

  return renderContent();
};

Collapse.propType = {
  motion: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.func, _propTypes.default.object]),
  children: _propTypes.default.node,
  duration: _propTypes.default.number,
  onMotionEnd: _propTypes.default.func
};
Collapse.defaultProps = {
  duration: 250,
  motion: true,
  onMotionEnd: _noop2.default
};
var _default = Collapse;
exports.default = _default;