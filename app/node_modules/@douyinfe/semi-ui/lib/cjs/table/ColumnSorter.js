"use strict";

var _WeakMap = require("@babel/runtime-corejs3/core-js-stable/weak-map");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

var _Object$getOwnPropertyDescriptor = require("@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _assign = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/object/assign"));

var _noop2 = _interopRequireDefault(require("lodash/noop"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _semiIcons = require("@douyinfe/semi-icons");

var _constants = require("@douyinfe/semi-foundation/lib/cjs/table/constants");

var _isEnterPress = _interopRequireDefault(require("@douyinfe/semi-foundation/lib/cjs/utils/isEnterPress"));

function _getRequireWildcardCache(nodeInterop) { if (typeof _WeakMap !== "function") return null; var cacheBabelInterop = new _WeakMap(); var cacheNodeInterop = new _WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = _Object$defineProperty && _Object$getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? _Object$getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { _Object$defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class ColumnSorter extends _react.PureComponent {
  render() {
    const {
      prefixCls,
      onClick,
      sortOrder,
      style
    } = this.props;
    const iconBtnSize = 'small';
    const upCls = (0, _classnames.default)("".concat(prefixCls, "-column-sorter-up"), {
      on: sortOrder === _constants.strings.SORT_DIRECTIONS[0]
    });
    const downCls = (0, _classnames.default)("".concat(prefixCls, "-column-sorter-down"), {
      on: sortOrder === _constants.strings.SORT_DIRECTIONS[1]
    });
    const ariaProps = {
      /**
       * Set 'aria-sort' to aria-columnheader is difficult, so set 'aria-label' about sort info to sorter
       * reference: https://developer.mozilla.org/en-US/docs/Web/API/Element/ariaSort
       */
      'aria-label': "Current sort order is ".concat(sortOrder ? "".concat(sortOrder, "ing") : 'none'),
      'aria-roledescription': 'Sort data with this column'
    };
    return /*#__PURE__*/_react.default.createElement("div", (0, _assign.default)({
      role: 'button'
    }, ariaProps, {
      tabIndex: -1,
      style: style,
      className: "".concat(prefixCls, "-column-sorter"),
      onClick: onClick,
      onKeyPress: e => (0, _isEnterPress.default)(e) && onClick(e)
    }), /*#__PURE__*/_react.default.createElement("span", {
      className: "".concat(upCls)
    }, /*#__PURE__*/_react.default.createElement(_semiIcons.IconCaretup, {
      size: iconBtnSize
    })), /*#__PURE__*/_react.default.createElement("span", {
      className: "".concat(downCls)
    }, /*#__PURE__*/_react.default.createElement(_semiIcons.IconCaretdown, {
      size: iconBtnSize
    })));
  }

}

exports.default = ColumnSorter;
ColumnSorter.propTypes = {
  className: _propTypes.default.string,
  style: _propTypes.default.object,
  onClick: _propTypes.default.func,
  prefixCls: _propTypes.default.string,
  sortOrder: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool])
};
ColumnSorter.defaultProps = {
  prefixCls: _constants.cssClasses.PREFIX,
  onClick: _noop2.default,
  sortOrder: false
};