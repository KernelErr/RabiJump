"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _set = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/set"));

var _assign = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/object/assign"));

var _noop2 = _interopRequireDefault(require("lodash/noop"));

var _get2 = _interopRequireDefault(require("lodash/get"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _ColGroup = _interopRequireDefault(require("./ColGroup"));

var _TableHeader = _interopRequireDefault(require("./TableHeader"));

/* eslint-disable max-len */

/**
 * When there are fixed columns, the header is rendered as a separate Table
 */
class HeadTable extends _react.default.PureComponent {
  constructor() {
    let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
      selectedRowKeysSet: new _set.default()
    };
    super(props);
  }

  render() {
    const {
      scroll,
      prefixCls,
      fixed,
      forwardedRef,
      handleBodyScroll,
      columns,
      components,
      onDidUpdate,
      showHeader,
      anyColumnFixed,
      bodyHasScrollBar
    } = this.props;

    if (!showHeader) {
      return null;
    }

    const Table = (0, _get2.default)(components, 'header.outer', 'table');
    const x = (0, _get2.default)(scroll, 'x');
    const headStyle = {};
    const tableStyle = {};

    if (x && !fixed) {
      tableStyle.width = x;
    }

    if (bodyHasScrollBar) {
      headStyle.overflowY = 'scroll';
    }

    const colgroup = /*#__PURE__*/_react.default.createElement(_ColGroup.default, {
      columns: columns,
      prefixCls: prefixCls
    });

    const tableHeader = /*#__PURE__*/_react.default.createElement(_TableHeader.default, (0, _assign.default)({}, this.props, {
      columns: columns,
      components: components,
      onDidUpdate: onDidUpdate
    }));

    return /*#__PURE__*/_react.default.createElement("div", {
      key: "headTable",
      style: headStyle,
      className: "".concat(prefixCls, "-header"),
      ref: forwardedRef,
      onScroll: handleBodyScroll
    }, /*#__PURE__*/_react.default.createElement(Table, {
      style: tableStyle,
      className: (0, _classnames.default)(prefixCls, {
        ["".concat(prefixCls, "-fixed")]: anyColumnFixed
      })
    }, colgroup, tableHeader));
  }

}

HeadTable.propTypes = {
  anyColumnFixed: _propTypes.default.bool,
  bodyHasScrollBar: _propTypes.default.bool,
  columns: _propTypes.default.array,
  components: _propTypes.default.object,
  dataSource: _propTypes.default.array,
  fixed: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string]),
  handleBodyScroll: _propTypes.default.func,
  prefixCls: _propTypes.default.string,
  forwardedRef: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func]),
  scroll: _propTypes.default.shape({
    x: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string, _propTypes.default.bool]),
    y: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string])
  }),
  selectedRowKeysSet: _propTypes.default.instanceOf(_set.default).isRequired,
  showHeader: _propTypes.default.bool,
  onDidUpdate: _propTypes.default.func,
  onHeaderRow: _propTypes.default.func
};
HeadTable.defaultProps = {
  handleBodyScroll: _noop2.default
};

var _default = /*#__PURE__*/_react.default.forwardRef((props, ref) => /*#__PURE__*/_react.default.createElement(HeadTable, (0, _assign.default)({}, props, {
  forwardedRef: ref
})));

exports.default = _default;