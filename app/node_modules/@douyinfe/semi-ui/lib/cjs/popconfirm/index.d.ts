import React from 'react';
import PropTypes from 'prop-types';
import { PopconfirmAdapter } from '@douyinfe/semi-foundation/lib/cjs/popconfirm/popconfirmFoundation';
import BaseComponent from '../_base/baseComponent';
import { PopoverProps } from '../popover';
import { Position, Trigger } from '../tooltip';
import { ButtonProps } from '../button';
import { Type as ButtonType } from '../button/Button';
import { ContextValue } from '../configProvider/context';
import '@douyinfe/semi-foundation/lib/cjs/popconfirm/popconfirm.css';
import { Motion } from '../_base/base';
export interface PopconfirmProps extends PopoverProps {
    cancelText?: string;
    cancelButtonProps?: ButtonProps;
    cancelType?: ButtonType;
    content?: React.ReactNode;
    defaultVisible?: boolean;
    disabled?: boolean;
    icon?: React.ReactNode;
    okText?: string;
    okType?: ButtonType;
    okButtonProps?: ButtonProps;
    motion?: Motion;
    title?: React.ReactNode;
    visible?: boolean;
    prefixCls?: string;
    zIndex?: number;
    trigger?: Trigger;
    position?: Position;
    onCancel?: (e: React.MouseEvent) => void;
    onConfirm?: (e: React.MouseEvent) => void;
    onVisibleChange?: (visible: boolean) => void;
    onClickOutSide?: (e: React.MouseEvent) => void;
}
export interface PopconfirmState {
    visible: boolean;
}
export default class Popconfirm extends BaseComponent<PopconfirmProps, PopconfirmState> {
    static contextType: React.Context<ContextValue>;
    static propTypes: {
        motion: PropTypes.Requireable<boolean | object>;
        disabled: PropTypes.Requireable<boolean>;
        content: PropTypes.Requireable<any>;
        title: PropTypes.Requireable<any>;
        prefixCls: PropTypes.Requireable<string>;
        className: PropTypes.Requireable<string>;
        style: PropTypes.Requireable<object>;
        icon: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        okText: PropTypes.Requireable<string>;
        okType: PropTypes.Requireable<string>;
        cancelText: PropTypes.Requireable<string>;
        cancelType: PropTypes.Requireable<string>;
        onCancel: PropTypes.Requireable<(...args: any[]) => any>;
        onConfirm: PropTypes.Requireable<(...args: any[]) => any>;
        onClickOutSide: PropTypes.Requireable<(...args: any[]) => any>;
        onVisibleChange: PropTypes.Requireable<(...args: any[]) => any>;
        visible: PropTypes.Requireable<boolean>;
        defaultVisible: PropTypes.Requireable<boolean>;
        okButtonProps: PropTypes.Requireable<object>;
        cancelButtonProps: PropTypes.Requireable<object>;
        stopPropagation: PropTypes.Requireable<string | boolean>;
        zIndex: PropTypes.Requireable<number>;
        trigger: PropTypes.Requireable<string>;
        position: PropTypes.Requireable<string>;
    };
    static defaultProps: {
        stopPropagation: boolean;
        trigger: string;
        onVisibleChange: (...args: any[]) => void;
        disabled: boolean;
        icon: JSX.Element;
        okType: string;
        cancelType: string;
        prefixCls: string;
        zIndex: number;
        onCancel: (...args: any[]) => void;
        onConfirm: (...args: any[]) => void;
        onClickOutSide: (...args: any[]) => void;
    };
    constructor(props: PopconfirmProps);
    context: ContextValue;
    static getDerivedStateFromProps(props: PopconfirmProps, state: PopconfirmState): Partial<PopconfirmState>;
    get adapter(): PopconfirmAdapter<PopconfirmProps, PopconfirmState>;
    handleCancel: (e: React.MouseEvent) => void;
    handleConfirm: (e: React.MouseEvent) => void;
    handleVisibleChange: (visible: boolean) => void;
    handleClickOutSide: (e: React.MouseEvent) => any;
    stopImmediatePropagation: (e: React.SyntheticEvent) => void;
    renderControls(): JSX.Element;
    renderConfirmPopCard(): JSX.Element;
    render(): string | number | boolean | React.ReactFragment | JSX.Element;
}
