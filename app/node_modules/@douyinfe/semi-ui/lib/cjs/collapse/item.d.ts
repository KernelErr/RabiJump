import React, { CSSProperties, PureComponent, ReactNode } from 'react';
import PropTypes from 'prop-types';
import { CollapseContextType } from './collapse-context';
export interface CollapsePanelProps {
    itemKey: string;
    extra?: ReactNode;
    header?: ReactNode;
    className?: string;
    children?: React.ReactNode;
    reCalcKey?: number | string;
    style?: CSSProperties;
    showArrow?: boolean;
    disabled?: boolean;
}
export default class CollapsePanel extends PureComponent<CollapsePanelProps> {
    static contextType: React.Context<CollapseContextType>;
    static propTypes: {
        itemKey: PropTypes.Requireable<string>;
        extra: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        header: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        className: PropTypes.Requireable<string>;
        reCalcKey: PropTypes.Requireable<string | number>;
        showArrow: PropTypes.Requireable<boolean>;
        disabled: PropTypes.Requireable<boolean>;
    };
    static defaultProps: {
        showArrow: boolean;
        disabled: boolean;
    };
    private ariaID;
    context: CollapseContextType;
    renderHeader(active: boolean, expandIconEnable?: boolean): JSX.Element;
    render(): JSX.Element;
}
