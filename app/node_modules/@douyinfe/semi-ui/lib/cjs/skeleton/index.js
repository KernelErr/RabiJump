"use strict";

var _WeakMap = require("@babel/runtime-corejs3/core-js-stable/weak-map");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

var _Object$getOwnPropertyDescriptor = require("@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _indexOf = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/index-of"));

var _getOwnPropertySymbols = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols"));

var _assign = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/object/assign"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _constants = require("@douyinfe/semi-foundation/lib/cjs/skeleton/constants");

require("@douyinfe/semi-foundation/lib/cjs/skeleton/skeleton.css");

var _item = require("./item");

function _getRequireWildcardCache(nodeInterop) { if (typeof _WeakMap !== "function") return null; var cacheBabelInterop = new _WeakMap(); var cacheNodeInterop = new _WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = _Object$defineProperty && _Object$getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? _Object$getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { _Object$defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};

  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && (0, _indexOf.default)(e).call(e, p) < 0) t[p] = s[p];

  if (s != null && typeof _getOwnPropertySymbols.default === "function") for (var i = 0, p = (0, _getOwnPropertySymbols.default)(s); i < p.length; i++) {
    if ((0, _indexOf.default)(e).call(e, p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

const prefixCls = _constants.cssClasses.PREFIX;

class Skeleton extends _react.PureComponent {
  render() {
    const _a = this.props,
          {
      placeholder,
      active,
      children,
      className,
      loading,
      style
    } = _a,
          others = __rest(_a, ["placeholder", "active", "children", "className", "loading", "style"]);

    const skCls = (0, _classnames.default)(prefixCls, {
      ["".concat(prefixCls, "-active")]: Boolean(active)
    }, className);
    let content;

    if (loading) {
      content = /*#__PURE__*/_react.default.createElement("div", (0, _assign.default)({
        className: skCls,
        style: style
      }, others, {
        "x-semi-prop": "placeholder"
      }), placeholder);
    } else {
      content = children;
    }

    return content;
  }

}

Skeleton.Avatar = _item.Avatar;
Skeleton.Title = _item.Title;
Skeleton.Button = _item.Button;
Skeleton.Paragraph = _item.Paragraph;
Skeleton.Image = _item.Image;
Skeleton.defaultProps = {
  loading: true
};
Skeleton.propTypes = {
  active: _propTypes.default.bool,
  placeholder: _propTypes.default.node,
  style: _propTypes.default.object,
  className: _propTypes.default.string,
  loading: _propTypes.default.bool,
  children: _propTypes.default.node
};
var _default = Skeleton;
exports.default = _default;