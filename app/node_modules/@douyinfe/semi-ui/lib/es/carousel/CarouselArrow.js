import _get from "lodash/get";
import _concatInstanceProperty from "@babel/runtime-corejs3/core-js-stable/instance/concat";
import _Object$assign from "@babel/runtime-corejs3/core-js-stable/object/assign";

/* eslint-disable jsx-a11y/click-events-have-key-events */

/* eslint-disable jsx-a11y/no-static-element-interactions */
import React from "react";
import cls from 'classnames';
import { cssClasses } from '@douyinfe/semi-foundation/lib/es/carousel/constants';
import { IconChevronLeft, IconChevronRight } from "@douyinfe/semi-icons";

class CarouselArrow extends React.PureComponent {
  constructor() {
    super(...arguments);

    this.renderLeftIcon = () => {
      return _get(this.props, 'arrowProps.leftArrow.children', /*#__PURE__*/React.createElement(IconChevronLeft, {
        "aria-label": "Previous index",
        size: "inherit"
      }));
    };

    this.renderRightIcon = () => {
      return _get(this.props, 'arrowProps.rightArrow.children', /*#__PURE__*/React.createElement(IconChevronRight, {
        "aria-label": "Next index",
        size: "inherit"
      }));
    };
  }

  render() {
    var _context, _context2, _context3;

    const {
      type,
      theme,
      prev,
      next
    } = this.props;
    const classNames = cls({
      [cssClasses.CAROUSEL_ARROW]: true,
      [_concatInstanceProperty(_context = "".concat(cssClasses.CAROUSEL_ARROW, "-")).call(_context, theme)]: theme,
      ["".concat(cssClasses.CAROUSEL_ARROW, "-hover")]: type === 'hover'
    });
    const leftClassNames = cls({
      ["".concat(cssClasses.CAROUSEL_ARROW, "-prev")]: true,
      [_concatInstanceProperty(_context2 = "".concat(cssClasses.CAROUSEL_ARROW, "-")).call(_context2, theme)]: theme
    });
    const rightClassNames = cls({
      ["".concat(cssClasses.CAROUSEL_ARROW, "-next")]: true,
      [_concatInstanceProperty(_context3 = "".concat(cssClasses.CAROUSEL_ARROW, "-")).call(_context3, theme)]: theme
    });
    return /*#__PURE__*/React.createElement("div", {
      className: classNames
    }, /*#__PURE__*/React.createElement("div", _Object$assign({
      // role='button'
      className: leftClassNames,
      onClick: prev
    }, _get(this.props, 'arrowProps.leftArrow.props'), {
      "x-semi-prop": "arrowProps.leftArrow.children"
    }), this.renderLeftIcon()), /*#__PURE__*/React.createElement("div", _Object$assign({
      // role='button'
      // tabIndex={0} 
      className: rightClassNames,
      onClick: next
    }, _get(this.props, 'arrowProps.rightArrow.props'), {
      "x-semi-prop": "arrowProps.rightArrow.children"
    }), this.renderRightIcon()));
  }

}

export default CarouselArrow;