import _Object$assign from "@babel/runtime-corejs3/core-js-stable/object/assign";
// @ts-ignore  Currently there is no types for semi-animation-react
import { Transition } from '@douyinfe/semi-animation-react';
import React from 'react';
export default function ToastTransition() {
  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  let {
    motion = {}
  } = props;

  if (typeof motion === 'function') {
    motion = motion(props);
  } else if (!motion || typeof motion !== 'object') {
    motion = {};
  }

  return /*#__PURE__*/React.createElement(Transition // onFrame={style => console.log(style)}
  , _Object$assign({
    // onFrame={style => console.log(style)}
    from: {
      translateY: -100,
      opacity: 0
    },
    enter: {
      translateY: {
        val: 0,
        tension: 560,
        friction: 32
      },
      opacity: {
        val: 1,
        duration: 300
      }
    },
    leave: {
      translateY: {
        val: -100,
        easing: 'easeOutCubic',
        duration: 300
      },
      opacity: {
        val: 0,
        duration: 200
      }
    }
  }, motion), typeof props.children === 'function' ? _ref => {
    let {
      translateY,
      opacity
    } = _ref;
    return props.children({
      transform: "translateY(".concat(translateY, "%)"),
      opacity
    });
  } : props.children);
}