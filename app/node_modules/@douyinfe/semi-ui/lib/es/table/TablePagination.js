import _isFunction from "lodash/isFunction";
import _get from "lodash/get";
import _Object$assign from "@babel/runtime-corejs3/core-js-stable/object/assign";

/* eslint-disable max-len */
import React, { PureComponent, isValidElement } from 'react';
import PropTypes from 'prop-types';
import { cssClasses } from '@douyinfe/semi-foundation/lib/es/table/constants';
import Pagination from '../pagination';
export default class TablePagination extends PureComponent {
  render() {
    const {
      pagination,
      prefixCls,
      info,
      renderPagination
    } = this.props;

    const total = _get(pagination, 'total');

    const customPagination = renderPagination && _isFunction(renderPagination) ? renderPagination(pagination) : null;
    return /*#__PURE__*/React.createElement("div", {
      className: "".concat(prefixCls, "-pagination-outer")
    }, /*#__PURE__*/isValidElement(customPagination) ? customPagination : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("span", {
      className: "".concat(prefixCls, "-pagination-info")
    }, info), /*#__PURE__*/React.createElement("span", {
      className: "".concat(prefixCls, "-pagination-wrapper")
    }, total > 0 ? /*#__PURE__*/React.createElement(Pagination, _Object$assign({}, pagination, {
      key: _get(pagination, 'pageSize', 'pagination')
    })) : null)));
  }

}
TablePagination.propTypes = {
  style: PropTypes.object,
  prefixCls: PropTypes.string,
  pagination: PropTypes.object,
  info: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),
  renderPagination: PropTypes.func
};
TablePagination.defaultProps = {
  prefixCls: cssClasses.PREFIX
};