import _noop from "lodash/noop";
import _Object$assign from "@babel/runtime-corejs3/core-js-stable/object/assign";
import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import cls from 'classnames';
import { IconCaretup, IconCaretdown } from '@douyinfe/semi-icons';
import { cssClasses, strings } from '@douyinfe/semi-foundation/lib/es/table/constants';
import isEnterPress from '@douyinfe/semi-foundation/lib/es/utils/isEnterPress';
export default class ColumnSorter extends PureComponent {
  render() {
    const {
      prefixCls,
      onClick,
      sortOrder,
      style
    } = this.props;
    const iconBtnSize = 'small';
    const upCls = cls("".concat(prefixCls, "-column-sorter-up"), {
      on: sortOrder === strings.SORT_DIRECTIONS[0]
    });
    const downCls = cls("".concat(prefixCls, "-column-sorter-down"), {
      on: sortOrder === strings.SORT_DIRECTIONS[1]
    });
    const ariaProps = {
      /**
       * Set 'aria-sort' to aria-columnheader is difficult, so set 'aria-label' about sort info to sorter
       * reference: https://developer.mozilla.org/en-US/docs/Web/API/Element/ariaSort
       */
      'aria-label': "Current sort order is ".concat(sortOrder ? "".concat(sortOrder, "ing") : 'none'),
      'aria-roledescription': 'Sort data with this column'
    };
    return /*#__PURE__*/React.createElement("div", _Object$assign({
      role: 'button'
    }, ariaProps, {
      tabIndex: -1,
      style: style,
      className: "".concat(prefixCls, "-column-sorter"),
      onClick: onClick,
      onKeyPress: e => isEnterPress(e) && onClick(e)
    }), /*#__PURE__*/React.createElement("span", {
      className: "".concat(upCls)
    }, /*#__PURE__*/React.createElement(IconCaretup, {
      size: iconBtnSize
    })), /*#__PURE__*/React.createElement("span", {
      className: "".concat(downCls)
    }, /*#__PURE__*/React.createElement(IconCaretdown, {
      size: iconBtnSize
    })));
  }

}
ColumnSorter.propTypes = {
  className: PropTypes.string,
  style: PropTypes.object,
  onClick: PropTypes.func,
  prefixCls: PropTypes.string,
  sortOrder: PropTypes.oneOfType([PropTypes.string, PropTypes.bool])
};
ColumnSorter.defaultProps = {
  prefixCls: cssClasses.PREFIX,
  onClick: _noop,
  sortOrder: false
};