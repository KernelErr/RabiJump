import React, { PureComponent } from 'react';
import classNames from 'classnames';
import PropTypes from 'prop-types';
import { cssClasses } from '@douyinfe/semi-foundation/lib/es/form/constants';
const prefixCls = cssClasses.PREFIX;
export default class Label extends PureComponent {
  render() {
    const {
      children,
      required,
      text,
      disabled,
      name,
      width,
      align,
      style,
      className,
      extra,
      id
    } = this.props;
    const labelCls = classNames(className, {
      ["".concat(prefixCls, "-field-label")]: true,
      ["".concat(prefixCls, "-field-label-left")]: align === 'left',
      ["".concat(prefixCls, "-field-label-right")]: align === 'right',
      ["".concat(prefixCls, "-field-label-required")]: required,
      ["".concat(prefixCls, "-field-label-disabled")]: disabled,
      ["".concat(prefixCls, "-field-label-with-extra")]: extra
    });
    const labelStyle = style ? style : {};
    width ? labelStyle.width = width : null;
    const textContent = /*#__PURE__*/React.createElement("div", {
      className: "".concat(prefixCls, "-field-label-text"),
      "x-semi-prop": "label"
    }, typeof text !== 'undefined' ? text : children);
    const contentWithExtra = /*#__PURE__*/React.createElement(React.Fragment, null, textContent, /*#__PURE__*/React.createElement("div", {
      className: "".concat(prefixCls, "-field-label-extra")
    }, extra));
    return /*#__PURE__*/React.createElement("label", {
      className: labelCls,
      htmlFor: name,
      style: labelStyle,
      id: id
    }, extra ? contentWithExtra : textContent);
  }

}
Label.defaultProps = {
  required: false,
  name: '',
  align: 'left',
  className: ''
};
Label.propTypes = {
  id: PropTypes.string,
  children: PropTypes.node,
  required: PropTypes.bool,
  text: PropTypes.node,
  disabled: PropTypes.bool,
  name: PropTypes.string,
  align: PropTypes.string,
  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  style: PropTypes.object,
  className: PropTypes.string,
  extra: PropTypes.node
};