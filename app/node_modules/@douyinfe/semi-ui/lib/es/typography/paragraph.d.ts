import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import { Ellipsis, TypographyBaseSize, TypographyBaseSpacing, TypographyBaseType, OmitTypographyProps } from './interface';
import { CopyableConfig, LinkType } from './title';
declare type OmitParagraphProps = OmitTypographyProps;
export interface ParagraphProps extends Omit<React.HTMLAttributes<HTMLParagraphElement>, OmitParagraphProps> {
    className?: string;
    component?: React.ElementType;
    copyable?: CopyableConfig | boolean;
    delete?: boolean;
    disabled?: boolean;
    ellipsis?: Ellipsis | boolean;
    link?: LinkType;
    mark?: boolean;
    size?: TypographyBaseSize;
    spacing?: TypographyBaseSpacing;
    strong?: boolean;
    style?: React.CSSProperties;
    type?: TypographyBaseType;
    underline?: boolean;
}
export default class Paragraph extends PureComponent<ParagraphProps> {
    static propTypes: {
        copyable: PropTypes.Requireable<boolean | object>;
        delete: PropTypes.Requireable<boolean>;
        disabled: PropTypes.Requireable<boolean>;
        ellipsis: PropTypes.Requireable<boolean | object>;
        mark: PropTypes.Requireable<boolean>;
        link: PropTypes.Requireable<boolean | object>;
        underline: PropTypes.Requireable<boolean>;
        strong: PropTypes.Requireable<boolean>;
        type: PropTypes.Requireable<"warning" | "success" | "primary" | "tertiary" | "secondary" | "danger" | "quaternary">;
        size: PropTypes.Requireable<"small" | "normal">;
        spacing: PropTypes.Requireable<"normal" | "extended">;
        style: PropTypes.Requireable<object>;
        className: PropTypes.Requireable<string>;
        component: PropTypes.Requireable<string>;
    };
    static defaultProps: {
        copyable: boolean;
        delete: boolean;
        disabled: boolean;
        ellipsis: boolean;
        mark: boolean;
        underline: boolean;
        strong: boolean;
        link: boolean;
        type: string;
        size: string;
        spacing: string;
        style: {};
        className: string;
    };
    render(): JSX.Element;
}
export {};
