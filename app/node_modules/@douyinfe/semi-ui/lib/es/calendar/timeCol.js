import _mapInstanceProperty from "@babel/runtime-corejs3/core-js-stable/instance/map";
import _keysInstanceProperty from "@babel/runtime-corejs3/core-js-stable/instance/keys";
import _spliceInstanceProperty from "@babel/runtime-corejs3/core-js-stable/instance/splice";
import React, { PureComponent } from 'react';
import cls from 'classnames';
import PropTypes from 'prop-types';
import LocaleConsumer from '../locale/localeConsumer';
import localeContext from '../locale/context';
import { cssClasses } from '@douyinfe/semi-foundation/lib/es/calendar/constants';
import '@douyinfe/semi-foundation/lib/es/calendar/calendar.css';
const prefixCls = "".concat(cssClasses.PREFIX, "-time");
export default class timeCol extends PureComponent {
  formatTime(item) {
    const {
      renderTimeDisplay
    } = this.props;

    if (typeof renderTimeDisplay === 'function') {
      return renderTimeDisplay(item);
    } else {
      const replaceTime = (template, time) => template.replace('${time}', String(time));

      return /*#__PURE__*/React.createElement(LocaleConsumer, {
        componentName: "Calendar",
        key: "locale-".concat(item)
      }, locale => {
        let time = item < 12 ? replaceTime(locale.AM, item) : replaceTime(locale.PM, item - 12);

        if (item === 12) {
          time = replaceTime(locale.PM, item);
        }

        return time;
      });
    }
  }

  renderTime() {
    var _context, _context2;

    const {
      className
    } = this.props;
    const wrapperCls = cls(className, "".concat(prefixCls));

    const list = _mapInstanceProperty(_context = [..._keysInstanceProperty(_context2 = Array(24)).call(_context2)]).call(_context, item => this.formatTime(item));

    _spliceInstanceProperty(list).call(list, 0, 1, '');

    const inner = _mapInstanceProperty(list).call(list, (item, index) => /*#__PURE__*/React.createElement("li", {
      key: "time-".concat(index),
      className: "".concat(prefixCls, "-item")
    }, /*#__PURE__*/React.createElement("span", null, item)));

    return /*#__PURE__*/React.createElement("div", {
      className: wrapperCls
    }, /*#__PURE__*/React.createElement("ul", {
      className: "".concat(prefixCls, "-items")
    }, inner));
  }

  render() {
    const time = this.renderTime();
    return time;
  }

}
timeCol.propTypes = {
  className: PropTypes.string,
  renderTimeDisplay: PropTypes.func
};
timeCol.contextType = localeContext;