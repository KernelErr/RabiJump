import React from 'react';
import PropTypes from 'prop-types';
import CalendarFoundation, { CalendarAdapter } from '@douyinfe/semi-foundation/lib/es/calendar/foundation';
import BaseComponent from '../_base/baseComponent';
import { DayColProps } from './interface';
import '@douyinfe/semi-foundation/lib/es/calendar/calendar.css';
export interface DayColState {
    currPos: number;
    showCurrTime: boolean;
}
export default class DayCol extends BaseComponent<DayColProps, DayColState> {
    static propTypes: {
        events: PropTypes.Requireable<any[]>;
        displayValue: PropTypes.Requireable<Date>;
        showCurrTime: PropTypes.Requireable<boolean>;
        scrollHeight: PropTypes.Requireable<number>;
        currPos: PropTypes.Requireable<number>;
        handleClick: PropTypes.Requireable<(...args: any[]) => any>;
        mode: PropTypes.Requireable<string>;
        isWeekend: PropTypes.Requireable<boolean>;
        dateGridRender: PropTypes.Requireable<(...args: any[]) => any>;
    };
    static defaultProps: {
        events: import("@douyinfe/semi-foundation/lib/es/calendar/foundation").EventObject[];
        showCurrTime: boolean;
        scrollHeight: number;
        currPos: number;
        mode: string;
    };
    static contextType: React.Context<import("../locale/interface").Locale>;
    foundation: CalendarFoundation;
    constructor(props: DayColProps);
    componentDidMount(): void;
    componentWillUnmount(): void;
    get adapter(): CalendarAdapter<DayColProps, DayColState>;
    renderEvents: () => JSX.Element[];
    renderCurrTime: () => JSX.Element;
    handleClick: DayColProps['handleClick'];
    renderGrid: () => JSX.Element;
    render(): JSX.Element;
}
