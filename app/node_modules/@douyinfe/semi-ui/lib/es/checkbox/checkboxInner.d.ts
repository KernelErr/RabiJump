import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
export interface CheckboxInnerProps {
    'aria-describedby'?: React.AriaAttributes['aria-describedby'];
    'aria-errormessage'?: React.AriaAttributes['aria-errormessage'];
    'aria-invalid'?: React.AriaAttributes['aria-invalid'];
    'aria-labelledby'?: React.AriaAttributes['aria-labelledby'];
    'aria-required'?: React.AriaAttributes['aria-required'];
    indeterminate?: boolean;
    checked?: boolean;
    disabled?: boolean;
    prefixCls?: string;
    name?: string;
    isPureCardType?: boolean;
    ref?: React.MutableRefObject<CheckboxInner> | ((ref: CheckboxInner) => void);
    addonId?: string;
    extraId?: string;
    'aria-label'?: React.AriaAttributes['aria-label'];
    focusInner?: boolean;
    onInputFocus?: (e: any) => void;
    onInputBlur?: (e: any) => void;
    preventScroll?: boolean;
}
declare class CheckboxInner extends PureComponent<CheckboxInnerProps> {
    static contextType: React.Context<import("./context").CheckboxContextType>;
    static propTypes: {
        'aria-describedby': PropTypes.Requireable<string>;
        'aria-errormessage': PropTypes.Requireable<string>;
        'aria-invalid': PropTypes.Requireable<boolean>;
        'aria-labelledby': PropTypes.Requireable<string>;
        'aria-required': PropTypes.Requireable<boolean>;
        checked: PropTypes.Requireable<boolean>;
        disabled: PropTypes.Requireable<boolean>;
        onChange: PropTypes.Requireable<(...args: any[]) => any>;
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        grouped: PropTypes.Requireable<boolean>;
        value: PropTypes.Requireable<any>;
        isPureCardType: PropTypes.Requireable<boolean>;
        addonId: PropTypes.Requireable<string>;
        extraId: PropTypes.Requireable<string>;
        focusInner: PropTypes.Requireable<boolean>;
        onInputFocus: PropTypes.Requireable<(...args: any[]) => any>;
        onInputBlur: PropTypes.Requireable<(...args: any[]) => any>;
        preventScroll: PropTypes.Requireable<boolean>;
    };
    static defaultProps: {
        onChange: (...args: any[]) => void;
    };
    inputEntity: HTMLInputElement;
    blur(): void;
    focus(): void;
    render(): JSX.Element;
}
export default CheckboxInner;
