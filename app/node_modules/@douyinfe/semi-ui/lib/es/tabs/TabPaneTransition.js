import _toInteger from "lodash/toInteger";
import _Object$assign from "@babel/runtime-corejs3/core-js-stable/object/assign";

/* eslint-disable react/destructuring-assignment */
import React from 'react';
import { Transition } from '@douyinfe/semi-animation-react';

const TabPaneTransition = function () {
  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  const direction = props.direction ? 1 : -1;
  const {
    mode
  } = props;
  let {
    motion
  } = props;
  const ratio = 60;

  if (typeof motion === 'function') {
    motion = motion(props);
  } else if (!motion || typeof motion !== 'object') {
    motion = {};
  }

  if (mode === 'vertical') {
    return /*#__PURE__*/React.createElement(Transition, _Object$assign({}, props, {
      config: {
        tension: 612,
        friction: 32
      },
      from: {
        translateY: direction * ratio,
        opacity: 0
      },
      enter: {
        translateY: 0,
        opacity: {
          val: 1,
          duration: 200
        }
      },
      leave: {
        translateY: -1 * direction * ratio,
        opacity: {
          val: 0,
          duration: 200
        }
      }
    }, motion), typeof props.children === 'function' ? _ref => {
      let {
        translateY,
        opacity
      } = _ref;
      // delete translateX in 0 in case of zIndex problems.
      const finalState = _toInteger(translateY) === 0 ? {
        opacity
      } : {
        transform: "translateY(".concat(_toInteger(translateY), "px)"),
        opacity
      };
      return props.children(finalState);
    } : props.children);
  }

  return /*#__PURE__*/React.createElement(Transition, _Object$assign({}, props, {
    config: {
      tension: 612,
      friction: 32
    },
    from: {
      translateX: direction * ratio,
      opacity: 0
    },
    enter: {
      translateX: 0,
      opacity: {
        val: 1,
        duration: 200
      }
    },
    leave: {
      translateX: -1 * direction * ratio,
      opacity: {
        val: 0,
        duration: 200
      }
    }
  }, motion), typeof props.children === 'function' ? _ref2 => {
    let {
      translateX,
      opacity
    } = _ref2;
    // delete translateX in 0 in case of zIndex problems.
    const finalState = _toInteger(translateX) === 0 ? {
      opacity
    } : {
      transform: "translateX(".concat(_toInteger(translateX), "px)"),
      opacity
    };
    return props.children(finalState);
  } : props.children);
};

export default TabPaneTransition;