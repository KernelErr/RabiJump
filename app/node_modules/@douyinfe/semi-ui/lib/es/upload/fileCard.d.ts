import { PureComponent, ReactNode, MouseEvent, CSSProperties } from 'react';
import PropTypes from 'prop-types';
import { Locale } from '../locale/interface';
import { RenderFileItemProps } from './interface';
export interface FileCardProps extends RenderFileItemProps {
    className?: string;
    style?: CSSProperties;
}
declare class FileCard extends PureComponent<FileCardProps> {
    static propTypes: {
        className: PropTypes.Requireable<string>;
        disabled: PropTypes.Requireable<boolean>;
        listType: PropTypes.Requireable<string>;
        name: PropTypes.Requireable<string>;
        onPreviewClick: PropTypes.Requireable<(...args: any[]) => any>;
        onRemove: PropTypes.Requireable<(...args: any[]) => any>;
        onReplace: PropTypes.Requireable<(...args: any[]) => any>;
        onRetry: PropTypes.Requireable<(...args: any[]) => any>;
        percent: PropTypes.Requireable<number>;
        preview: PropTypes.Requireable<boolean>;
        previewFile: PropTypes.Requireable<(...args: any[]) => any>;
        showReplace: PropTypes.Requireable<boolean>;
        showRetry: PropTypes.Requireable<boolean>;
        size: PropTypes.Requireable<string | number>;
        status: PropTypes.Requireable<string>;
        style: PropTypes.Requireable<object>;
        url: PropTypes.Requireable<string>;
        validateMessage: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        index: PropTypes.Requireable<number>;
    };
    static defaultProps: {
        listType: "list";
        name: string;
        onRemove: () => void;
        onRetry: () => void;
        preview: boolean;
        size: string;
    };
    transSize(size: string | number): string;
    renderValidateMessage(): ReactNode;
    renderPicValidateMsg(): ReactNode;
    renderPic(locale: Locale['Upload']): ReactNode;
    renderFile(locale: Locale["Upload"]): JSX.Element;
    onRemove(e: MouseEvent): void;
    onReplace(e: MouseEvent): void;
    onRetry(e: MouseEvent): void;
    render(): JSX.Element;
}
export default FileCard;
