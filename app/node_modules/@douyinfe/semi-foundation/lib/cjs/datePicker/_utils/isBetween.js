"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = isBetween;

var _dateFns = require("date-fns");

var _isString = _interopRequireDefault(require("../../utils/isString"));

/**
 * is the date between start and end?(not including start and end)
 *   - if start > end, return false
 * @param {String|Date} day
 * @param {Object} { start: string|Date, end: string|Date}
 * @returns {Boolean}
 */
function isBetween(day, _ref) {
  let {
    start,
    end
  } = _ref;
  const d = (0, _isString.default)(day) ? (0, _dateFns.parseISO)(day) : day;
  const s = (0, _isString.default)(start) ? (0, _dateFns.parseISO)(start) : start;
  const e = (0, _isString.default)(end) ? (0, _dateFns.parseISO)(end) : end;
  return (0, _dateFns.isBefore)(s, e) && (0, _dateFns.isWithinInterval)(d, {
    start: s,
    end: e
  }) && !(0, _dateFns.isEqual)(d, s) && !(0, _dateFns.isEqual)(d, e);
}