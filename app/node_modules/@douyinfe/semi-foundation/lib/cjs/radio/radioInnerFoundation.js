"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _assign = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/object/assign"));

var _foundation = _interopRequireDefault(require("../base/foundation"));

class RadioInnerFoundation extends _foundation.default {
  constructor(adapter) {
    super((0, _assign.default)({}, adapter));
  }

  init() {
    const checked = this._adapter.getProp('checked');

    const defaultChecked = this._adapter.getProp('defaultChecked');

    this.setChecked(checked || defaultChecked);
  }

  setChecked(checked) {
    this._adapter.setNativeControlChecked(checked);
  }

  getChecked() {
    return this._adapter.getProp('checked');
  }

  handleChange(e) {
    const isControlledMode = ('checked' in this.getProps());
    const {
      checked
    } = e.target;

    const stopPropagation = () => {
      e.stopPropagation();
    };

    const preventDefault = () => {
      e.preventDefault();
    };

    const cbValue = {
      target: (0, _assign.default)((0, _assign.default)({}, this.getProps()), {
        checked
      }),
      stopPropagation,
      preventDefault
    };

    if (isControlledMode) {
      this._adapter.notifyChange(cbValue);
    } else {
      this.setChecked(checked);

      this._adapter.notifyChange(cbValue);
    }
  } // eslint-disable-next-line @typescript-eslint/no-empty-function


  destroy() {}

}

exports.default = RadioInnerFoundation;