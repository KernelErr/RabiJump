"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _assign = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/object/assign"));

var _foundation = _interopRequireDefault(require("../base/foundation"));

var _keyCode = _interopRequireDefault(require("../utils/keyCode"));

class ModalContentFoundation extends _foundation.default {
  constructor(adapter) {
    super((0, _assign.default)((0, _assign.default)({}, ModalContentFoundation.defaultAdapter), adapter));
  }

  destroy() {
    this.handleKeyDownEventListenerUnmount();
    this.modalDialogBlur();
    this.prevFocusElementReFocus();
  }

  handleDialogMouseDown() {
    this._adapter.notifyDialogMouseDown();
  }

  handleMaskMouseUp() {
    this._adapter.notifyDialogMouseUp();
  }

  handleKeyDown(e) {
    const {
      closeOnEsc
    } = this.getProps();

    if (closeOnEsc && e.keyCode === _keyCode.default.ESC) {
      e.stopPropagation();
      this.close(e);
      return;
    }
  }

  handleKeyDownEventListenerMount() {
    this._adapter.addKeyDownEventListener();
  }

  handleKeyDownEventListenerUnmount() {
    this._adapter.removeKeyDownEventListener();
  }

  getMouseState() {
    this._adapter.getMouseState();
  }

  handleMaskClick(e) {
    const {
      dialogMouseDown
    } = this.getStates();

    if (e.target === e.currentTarget && !dialogMouseDown) {
      this.close(e);
    }
  }

  close(e) {
    this._adapter.notifyClose(e);
  }

  modalDialogFocus() {
    this._adapter.modalDialogFocus();
  }

  modalDialogBlur() {
    this._adapter.modalDialogBlur();
  }

  prevFocusElementReFocus() {
    this._adapter.prevFocusElementReFocus();
  }

}

exports.default = ModalContentFoundation;