import BaseFoundation, { DefaultAdapter } from '../base/foundation';
export interface PopconfirmAdapter<P = Record<string, any>, S = Record<string, any>> extends DefaultAdapter<P, S> {
    setVisible: (visible: boolean) => void;
    notifyConfirm: (e: any) => void;
    notifyCancel: (e: any) => void;
    notifyVisibleChange: (visible: boolean) => void;
    notifyClickOutSide: (e: any) => void;
}
export default class PopConfirmFoundation<P = Record<string, any>, S = Record<string, any>> extends BaseFoundation<PopconfirmAdapter<P, S>, P, S> {
    init(): void;
    destroy(): void;
    handleCancel(e: any): void;
    handleConfirm(e: any): void;
    handleClickOutSide(e: any): void;
    handleVisibleChange(visible: boolean): void;
}
