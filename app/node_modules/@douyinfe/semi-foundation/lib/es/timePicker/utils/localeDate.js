import _Object$keys from "@babel/runtime-corejs3/core-js-stable/object/keys";
import { format as dateFnsFormat, parse as dateFnsParse } from 'date-fns';
/* istanbul ignore next */

const replace = function replace(str, replacements) {
  let _str = str;

  for (const key of _Object$keys(replacements)) {
    if (typeof replacements[key] === 'string') {
      _str = _str.replace(key, replacements[key]);
    }
  }

  return _str;
};
/* istanbul ignore next */


export function localeFormat(date, format) {
  let locale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
  let str = dateFnsFormat(date, format, options);
  str = replace(str, locale);
  return str;
}
/* istanbul ignore next */

export function localeParse(dateString, format) {
  let locale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  let defaultDate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
  let options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};

  // const invertedLocale = invert(locale);
  const _dateString = replace(dateString, locale);

  return dateFnsParse(_dateString, format, defaultDate, options);
}