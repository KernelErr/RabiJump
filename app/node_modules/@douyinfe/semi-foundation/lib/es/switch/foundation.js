import _Object$assign from "@babel/runtime-corejs3/core-js-stable/object/assign";
import BaseFoundation from '../base/foundation';
import warning from '../utils/warning';
export default class SwitchFoundation extends BaseFoundation {
  constructor(adapter) {
    super(_Object$assign({}, adapter));

    this.handleFocusVisible = event => {
      const {
        target
      } = event;

      try {
        if (target.matches(':focus-visible')) {
          this._adapter.setFocusVisible(true);
        }
      } catch (error) {
        warning(true, 'Warning: [Semi Switch] The current browser does not support the focus-visible');
      }
    };

    this.handleBlur = () => {
      this._adapter.setFocusVisible(false);
    };
  }

  init() {
    const {
      defaultChecked,
      checked,
      disabled
    } = this.getProps();
    this.setChecked(defaultChecked || checked);
    this.setDisabled(disabled);
  }

  setChecked(checked) {
    this._adapter.setNativeControlChecked(checked);
  }

  setDisabled(disabled) {
    this._adapter.setNativeControlDisabled(disabled);
  }

  handleChange(checked, e) {
    const propChecked = this.getProps().checked;
    const isControledComponent = typeof propChecked !== 'undefined';

    if (isControledComponent) {
      this._adapter.notifyChange(checked, e);
    } else {
      this._adapter.setNativeControlChecked(checked);

      this._adapter.notifyChange(checked, e);
    }
  } // eslint-disable-next-line @typescript-eslint/no-empty-function


  destroy() {}

}